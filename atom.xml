<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pablo C]]></title>
  <link href="http://pcarranza.github.io/atom.xml" rel="self"/>
  <link href="http://pcarranza.github.io/"/>
  <updated>2015-05-03T19:20:16-04:00</updated>
  <id>http://pcarranza.github.io/</id>
  <author>
    <name><![CDATA[Pablo Carranza]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Exceptions for Flow Control]]></title>
    <link href="http://pcarranza.github.io/blog/2015/05/03/using-exceptions-for-flow-control/"/>
    <updated>2015-05-03T18:16:02-04:00</updated>
    <id>http://pcarranza.github.io/blog/2015/05/03/using-exceptions-for-flow-control</id>
    <content type="html"><![CDATA[<p>While reading Avdi Grimm&rsquo;s <strong>Exceptional Ruby</strong> he mentions:</p>

<figure class='code'><figcaption><span>Are Ruby Exceptions slow?</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Raising an exception is typically an expensive operation in any language,
</span><span class='line'>and Ruby is no, um, exception
</span></code></pre></td></tr></table></div></figure>


<p>Well, Python probably is no, um, exception neither.</p>

<p>A few weeks ago I was discussing about using exceptions for flow control myself
with my team. Probably influenced by <strong>Confident Ruby</strong> from the same author I
only like to see exception handling on the bottom edge of a method, not in the
middle.</p>

<!--more-->


<p>If I find an exception being catched in the middle of a method while performing a
code review I will request the code writer to extract that exception handling to
another method and to name it in a way that is showing a clear intent.</p>

<p>I think that exceptions are for exceptional situations, and should not be used
for handling the regular flow of the code. In fact, the less you catch exceptions,
the better. Because catching those is expensive enough, both for the cognitive
understanding of the reader, who is dragged out from the regular narrative of the
method, and for the system itself.</p>

<p>But this assertion from Avdi sparked my curiosity.</p>

<h3>How slow is slow?</h3>

<p>You could never tell without measurements, my gut feeling is that using exceptions
should involve a whole subsystem, but I have no idea how bad that should be.</p>

<p>So let&rsquo;s play, let&rsquo;s write some equivalent code and measure which one is slower, and
let&rsquo;s try to figure out why.</p>

<h3>Â The experiment</h3>

<p>Just some python code</p>

<figure class='code'><figcaption><span>using_exceptions_for_control_flow.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">textwrap</span> <span class="kn">import</span> <span class="n">dedent</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">timeit</span> <span class="kn">import</span> <span class="n">timeit</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">measure_all_the_things</span><span class="p">():</span>
</span><span class='line'>    <span class="n">use_cases</span> <span class="o">=</span> <span class="n">create_use_cases</span><span class="p">()</span>
</span><span class='line'>    <span class="n">measurements</span> <span class="o">=</span> <span class="n">measure_execution_times</span><span class="p">(</span><span class="n">use_cases</span><span class="p">)</span>
</span><span class='line'>    <span class="n">print_measurements</span><span class="p">(</span><span class="n">measurements</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">create_use_cases</span><span class="p">():</span>
</span><span class='line'>    <span class="n">use_cases</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="n">use_cases</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="s">&#39;using exceptions&#39;</span><span class="p">,</span> <span class="n">dedent</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span><span class="se">\</span>
</span><span class='line'><span class="s">            d = {}</span>
</span><span class='line'><span class="s">            try:</span>
</span><span class='line'><span class="s">                v = d[&#39;key&#39;]</span>
</span><span class='line'><span class="s">            except KeyError:</span>
</span><span class='line'><span class="s">                v = &#39;default value&#39;</span>
</span><span class='line'><span class="s">            &quot;&quot;&quot;</span><span class="p">)))</span>
</span><span class='line'>    <span class="n">use_cases</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="s">&#39;using default value&#39;</span><span class="p">,</span> <span class="n">dedent</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span><span class="se">\</span>
</span><span class='line'><span class="s">            d = {}</span>
</span><span class='line'><span class="s">            v= d.get(&#39;key&#39;, &#39;default value&#39;)</span>
</span><span class='line'><span class="s">            &quot;&quot;&quot;</span><span class="p">)))</span>
</span><span class='line'>    <span class="n">use_cases</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="s">&#39;handling none manually&#39;</span><span class="p">,</span> <span class="n">dedent</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span><span class="se">\</span>
</span><span class='line'><span class="s">            d = {}</span>
</span><span class='line'><span class="s">            value = d.get(&#39;key&#39;)</span>
</span><span class='line'><span class="s">            if not value:</span>
</span><span class='line'><span class="s">                value = &#39;default value&#39;</span>
</span><span class='line'><span class="s">            &quot;&quot;&quot;</span><span class="p">)))</span>
</span><span class='line'>    <span class="n">use_cases</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="s">&#39;checking keys&#39;</span><span class="p">,</span> <span class="n">dedent</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span><span class="se">\</span>
</span><span class='line'><span class="s">            d = {}</span>
</span><span class='line'><span class="s">            if &#39;key&#39; in d.keys():</span>
</span><span class='line'><span class="s">                value = d[&#39;key&#39;]</span>
</span><span class='line'><span class="s">            else:</span>
</span><span class='line'><span class="s">                value = &#39;default value&#39;</span>
</span><span class='line'><span class="s">            &quot;&quot;&quot;</span><span class="p">)))</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">use_cases</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">measure_execution_times</span><span class="p">(</span><span class="n">use_cases</span><span class="p">):</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;Measuring times&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span><span class='line'>    <span class="n">results</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">test</span> <span class="ow">in</span> <span class="n">use_cases</span><span class="p">:</span>
</span><span class='line'>        <span class="n">use_case</span><span class="p">,</span> <span class="n">code</span> <span class="o">=</span> <span class="n">test</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;.&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span><span class='line'>        <span class="n">results</span><span class="p">[</span><span class="n">use_case</span><span class="p">]</span> <span class="o">=</span> <span class="n">timeit</span><span class="p">(</span><span class="n">code</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">results</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">print_measurements</span><span class="p">(</span><span class="n">results</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;Showing results from best to worst:&#39;</span>
</span><span class='line'>    <span class="n">sorted_results</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="n">results</span><span class="o">.</span><span class="n">iteritems</span><span class="p">(),</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">use_case</span><span class="p">,</span> <span class="n">time</span> <span class="ow">in</span> <span class="n">sorted_results</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&#39;  &#39;</span> <span class="o">+</span> <span class="s">&#39;{} took {} seconds&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">use_case</span><span class="p">,</span> <span class="n">time</span><span class="p">)</span><span class="o">.</span><span class="n">capitalize</span><span class="p">()</span>
</span><span class='line'>    <span class="n">best</span> <span class="o">=</span> <span class="n">sorted_results</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="n">worst</span> <span class="o">=</span> <span class="n">sorted_results</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;&#39;</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;The best option is &quot;{}&quot;, taking {} seconds&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">best</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">best</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;The worst option is &quot;{}&quot;, taking {} seconds, which is {} times worse than the best option&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span>
</span><span class='line'>            <span class="n">worst</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">worst</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">worst</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">/</span> <span class="n">best</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">measure_all_the_things</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>The case that is being tested is particularly interesting for me as this was
a discussion we had in my team a few weeks ago: using KeyError to handle the
case when a given key does not exists in a dictionary.</p>

<p>Running the experiment I got the following output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./using_exceptions_for_control_flow.py
</span><span class='line'>Measuring times....
</span><span class='line'>Showing results from best to worst:
</span><span class='line'>  Checking keys took 0.170432090759 seconds
</span><span class='line'>  Using default value took 0.18324804306 seconds
</span><span class='line'>  Handling none manually took 0.194980859756 seconds
</span><span class='line'>  Using exceptions took 1.26372909546 seconds
</span><span class='line'>
</span><span class='line'>The best option is <span class="s2">&quot;checking keys&quot;</span>, taking 0.170432090759 seconds
</span><span class='line'>The worst option is <span class="s2">&quot;using exceptions&quot;</span>, taking 1.26372909546 seconds, which is 7.41485415 <span class="nb">times </span>worse than the best option
</span><span class='line'>./using_exceptions_for_control_flow.py  1.87s user 0.00s system 99% cpu 1.880 total
</span></code></pre></td></tr></table></div></figure>


<h3>It is slow, but that is not the point</h3>

<p>Using exceptions adds a second of execution time in 1.000.000 iterations. This is
clearly more time, depending on the host where this script is being run it
can take between 5 to 8 times more time using exceptions to check that a
given key exists in a dictionary.</p>

<p>The fastest runtime execution belongs to checking against the set of keys, which
makes me wonder why is the <em>get</em> slower, but let&rsquo;s ignore that for now as the difference
is really insignificant.</p>

<p>But this is not the point, execution time is more a Guido&rsquo;s problem than mine as
this benchmark is just a toy benchmark to check the cost of using exceptions.
If I run this benchmark using a more <em>real worl</em> sample, where the code was failing
if the key did not existed in the dictionary with, um, an exception; the difference
dilutes.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c"># ...</span>
</span><span class='line'><span class="n">use_cases</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="s">&#39;using exceptions&#39;</span><span class="p">,</span> <span class="n">dedent</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span><span class="se">\</span>
</span><span class='line'><span class="s">        d = {}</span>
</span><span class='line'><span class="s">        try:</span>
</span><span class='line'><span class="s">            try:</span>
</span><span class='line'><span class="s">                v = d[&#39;key&#39;]</span>
</span><span class='line'><span class="s">            except KeyError:</span>
</span><span class='line'><span class="s">                raise ValueError, &quot;key is required&quot;</span>
</span><span class='line'><span class="s">        except ValueError:</span>
</span><span class='line'><span class="s">            pass</span>
</span><span class='line'><span class="s">        &quot;&quot;&quot;</span><span class="p">)))</span>
</span><span class='line'><span class="n">use_cases</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="s">&#39;checking keys&#39;</span><span class="p">,</span> <span class="n">dedent</span><span class="p">(</span><span class="s">&quot;&quot;&quot;</span><span class="se">\</span>
</span><span class='line'><span class="s">        d = {}</span>
</span><span class='line'><span class="s">        try:</span>
</span><span class='line'><span class="s">            if not &#39;key&#39; in d.keys():</span>
</span><span class='line'><span class="s">                raise ValueError, &quot;key is required&quot;</span>
</span><span class='line'><span class="s">        except ValueError:</span>
</span><span class='line'><span class="s">            pass</span>
</span><span class='line'><span class="s">        &quot;&quot;&quot;</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Showing results from best to worst:
</span><span class='line'>  Checking keys took 1.18252801895 seconds
</span><span class='line'>  Using exceptions took 2.05906200409 seconds
</span><span class='line'>
</span><span class='line'>The best option is <span class="s2">&quot;checking keys&quot;</span>, taking 1.18252801895 seconds
</span><span class='line'>The worst option is <span class="s2">&quot;using exceptions&quot;</span>, taking 2.05906200409 seconds, which is 1.74123739234 <span class="nb">times </span>worse than the best option
</span><span class='line'>./using_exceptions_for_control_flow_agressively.py  3.28s user 0.02s system 99% cpu 3.305 total
</span></code></pre></td></tr></table></div></figure>


<p>In this second case we are already using exceptions to control the flow, checking <code>preconditions</code>,
telling the caller that the arguments he sent in are not ok. And this case is slow already.</p>

<p>But still, handling the KeyError is twice as slow as checking the existence of the key in the set.</p>

<h2>Conclusions</h2>

<p>Regarding performance, It really doesn&rsquo;t matter.</p>

<p>Is one slower than the others? yes, but all executions grow linearly
(I&rsquo;ve tested with more iterations) so there is no real reason why
you should prefer one over the other purely based on performance.</p>

<p>My only preference would go for code clarity, python does not have Ruby&rsquo;s
procs. That is a real disadvantage as it allows you to write a really compact form
of <em>failing on missing argument</em>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">value</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:key</span><span class="p">)</span> <span class="p">{</span> <span class="nb">fail</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;Key is required&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In python you are forced to write something like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="o">**</span><span class="n">args</span><span class="p">):</span>
</span><span class='line'>    <span class="k">if</span> <span class="ow">not</span> <span class="s">&#39;key&#39;</span> <span class="ow">in</span> <span class="n">args</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
</span><span class='line'>        <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s">&#39;Key is required&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Or whatever variant you want to pick, where implementing a function that wraps all the validation
is usually an interesting idea as it will keep code compact.</p>

<p>In any case I still prefer to not start a method with <code>try: ... except: ...</code> unless that is all the
method does. Simply because doing it so forces the reader to start from the error handling, not
focusing on understanding what the method is supposed to do.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Understanding MySql Degradation]]></title>
    <link href="http://pcarranza.github.io/blog/2014/12/29/understanding-mysql-degradation/"/>
    <updated>2014-12-29T13:45:17-05:00</updated>
    <id>http://pcarranza.github.io/blog/2014/12/29/understanding-mysql-degradation</id>
    <content type="html"><![CDATA[<p>This post is neither about magical configurations, nor about baremetal IO ops,
nor about if you should move your database server to SSD. Neither it is about
fine tuning a MySQL server configuration, not even about how MySQL works as a
cluster.</p>

<p>This is about a single database server, this is about understanding how a MySQL
database works to lay the things in a way that it just works better. Bear with
me on this quick trip into MySQL performance degradation, we only need one
database, a few million records, and one query.</p>

<!--more-->


<h2>The problem</h2>

<p>This all started a few years ago, with one customer complaining about a page
being slow. Initially from our developer point of view we thought that the issue
was as simple as a network problem. But a bit later, another user complained
about the same thing, and then another, so we started paying attention.</p>

<p>We did not had enough metrics, and most importantly, we did not <a href="http://blog.sriramnarayan.com/2011/04/dashboards-promote-ignorance.html">had the right metrics</a>.</p>

<p>Our <em>way too broad</em> green dashboard was not showing anything in particular,
regular load for a busy server, nothing that would trigger an alarm; later
on I dicovered that we weren&rsquo;t looking at the right place.</p>

<p>In out particular case we lacked one simple metric: <strong>request time</strong>. We had no idea
how much time was the average time a request took, nor the p99, so we were just blind. If you
don&rsquo;t know what I am talking about, do yourself a favor and go see
<a href="https://www.youtube.com/watch?v=czes-oa0yik">this talk</a> right now</p>

<p>As a last resort, we enabled <a href="http://dev.mysql.com/doc/refman/5.1/en/slow-query-log.html">logging slow queries</a> in the
MySQL server.</p>

<p>And we got many queries, some of those did not made any sense, but some did. One
in particular was really slow, and was related to the slow the page.</p>

<p>I took that query to my development server, with an anonymized data set and less
resources in general, I ran it once, it took a lot of time, I ran it again, it took
less than a second.</p>

<p>I blamed the query cache, so I disabled it, restarted the service and ran it
again, this are the results:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">select</span> <span class="n">id</span><span class="p">,</span> <span class="n">client_id</span><span class="p">,</span> <span class="n">status</span><span class="p">,</span> <span class="n">code</span><span class="p">,</span> <span class="n">created</span><span class="p">,</span> <span class="n">last_modified</span>
</span><span class='line'><span class="k">from</span> <span class="n">document</span>
</span><span class='line'><span class="k">where</span> <span class="n">status</span> <span class="o">&lt;&gt;</span> <span class="s1">&#39;DRAFT&#39;</span>
</span><span class='line'>    <span class="k">and</span> <span class="n">code</span> <span class="o">&gt;=</span> <span class="s1">&#39;2013-B-0000150730&#39;</span>
</span><span class='line'>    <span class="k">and</span> <span class="n">kind</span> <span class="o">=</span> <span class="s1">&#39;BILL&#39;</span>
</span><span class='line'>    <span class="k">and</span> <span class="n">company_id</span> <span class="o">=</span> <span class="mi">18</span>
</span><span class='line'><span class="k">order</span> <span class="k">by</span> <span class="n">code</span> <span class="k">asc</span> <span class="k">limit</span> <span class="mi">5</span><span class="err">\</span><span class="n">G</span>
</span><span class='line'><span class="o">***************************</span>
</span><span class='line'><span class="mi">5</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">21</span><span class="p">.</span><span class="mi">97</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>And the second time:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="o">***************************</span>
</span><span class='line'><span class="mi">5</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">81</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>I was puzzled.</p>

<h3>A note on the data model</h3>

<p>The code field is composed by year, the first letter of the kind and then an
unique ever increasing number, independent by year, kind and company. Don&rsquo;t try
to argue with the model, it is just the way it was.</p>

<h2>The understanding process</h2>

<p>The first thing to do to understand what MySQL is doing with a query is to ask it
to explain what he plans to do: the query plan</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">explain</span> <span class="n">extended</span> <span class="o">&lt;</span><span class="n">the</span> <span class="n">query</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>           <span class="n">id</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">select_type</span><span class="p">:</span> <span class="n">SIMPLE</span>
</span><span class='line'>        <span class="k">table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>         <span class="n">type</span><span class="p">:</span> <span class="n">range</span>
</span><span class='line'><span class="n">possible_keys</span><span class="p">:</span> <span class="n">company_id_idx</span><span class="p">,</span><span class="n">kind_idx</span><span class="p">,</span><span class="n">status_idx</span><span class="p">,</span><span class="n">code_idx</span>
</span><span class='line'>          <span class="k">key</span><span class="p">:</span> <span class="n">code_idx</span>
</span><span class='line'>      <span class="n">key_len</span><span class="p">:</span> <span class="mi">62</span>
</span><span class='line'>          <span class="n">ref</span><span class="p">:</span> <span class="no">NULL</span>
</span><span class='line'>         <span class="n">rows</span><span class="p">:</span> <span class="mi">1776463</span>
</span><span class='line'>     <span class="n">filtered</span><span class="p">:</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span>
</span><span class='line'>        <span class="n">Extra</span><span class="p">:</span> <span class="k">Using</span> <span class="k">where</span>
</span></code></pre></td></tr></table></div></figure>


<p>To start somewhere, it looks like 1.7M out of 5M rows (the whole dataset) are
going to be examined; it is also saying that the query is of range type which
makes sense as we are filtering for <code>code &gt;= '2013-B-0000150730'</code></p>

<p>But this is the first common misconception we ran into: we thought that MySQL
would use many indexes to resolve this query, but it was only using one: the
index on the <code>code</code> field.</p>

<p>Initially it makes some sense as that is one of the fields we were using to
filter for, but there are many others mentioned there, those will just not be
used.</p>

<p>The way MySQL picks what index to use is by checking the relevance and the
cardinality of it. If we ask MySQL to explain how it <em>sees</em> the indexes we can
get valuable information.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">&gt;</span> <span class="k">show</span> <span class="k">index</span> <span class="k">from</span> <span class="n">document</span> <span class="err">\</span><span class="n">G</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>   <span class="n">Non_unique</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="k">PRIMARY</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">id</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">3552927</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">2</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_id_idx</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">company_id</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">755</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">3</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">kind_idx</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">kind</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">17</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">4</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">status_idx</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">status</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">17</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">5</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">code_idx</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">code</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">3552927</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span></code></pre></td></tr></table></div></figure>


<p>The index on the code field is the one with the higher
<a href="http://en.wikipedia.org/wiki/Cardinality_%28SQL_statements%29">cardinality</a>
that is referred in the query, in a nutshell: a low cardinality makes the index
more coarse grained: more rows in the same bucket, in some cases this makes an
index useless, in some cases that is just what we want.</p>

<p>In the query we are also asking MySQL to sort by code, so it makes total sense
to use that index because rows will be read in order, there is no need to sort
afterwards.</p>

<p>Lets see what happens when we are actually running the query</p>

<h2>The MySQL profiler</h2>

<p>MySQL contains at least 2 great tools that can be used to determine what is
going on, one is to get the global state of the server by using
<code>[show engine innodb status](http://dev.mysql.com/doc/refman/5.1/en/innodb-monitors.html)</code>,
and the other one is the
<a href="http://dev.mysql.com/doc/refman/5.1/en/show-profile.html">profiler</a>.</p>

<p>The former is interesting to get general server status information, and is great
data to have. The latter are real metrics an measurements that are gathered
by MySQL while executing queries. This can provide a lot of insight of where the
time is going, and can hint why a query is slow.</p>

<p>After restarting the service to get a cold execution I enabled profiling and ran
the query again, two times.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">&gt;</span> <span class="kt">set</span> <span class="n">profiling</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="n">Query</span> <span class="n">OK</span><span class="p">,</span> <span class="mi">0</span> <span class="n">rows</span> <span class="nf">affected</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">the</span> <span class="n">query</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'><span class="mi">5</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">21</span><span class="p">.</span><span class="mi">97</span> <span class="n">sec</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">the</span> <span class="n">query</span> <span class="n">again</span><span class="o">&gt;</span><span class="p">;</span>
</span><span class='line'><span class="mi">5</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">81</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we have 2 execution samples of the same query profiled by MySQL, lets see
what is happening there and how they differ from each other.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">&gt;</span> <span class="k">show</span> <span class="n">profile</span> <span class="n">CPU</span><span class="p">,</span> <span class="n">CONTEXT</span> <span class="n">SWITCHES</span><span class="p">,</span> <span class="n">PAGE</span> <span class="n">FAULTS</span> <span class="k">for</span> <span class="n">query</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="o">+----------------------+-----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Status</span>               <span class="o">|</span> <span class="n">Duration</span>  <span class="o">|</span> <span class="n">CPU_user</span> <span class="o">|</span> <span class="n">CPU_system</span> <span class="o">|</span> <span class="n">Context_voluntary</span> <span class="o">|</span> <span class="n">Context_involuntary</span> <span class="o">|</span> <span class="n">Page_faults_major</span> <span class="o">|</span> <span class="n">Page_faults_minor</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+-----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="k">starting</span>             <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000075</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">checking</span> <span class="n">permissions</span> <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Opening</span> <span class="kp">tables</span>       <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000022</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">System</span> <span class="k">lock</span>          <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">init</span>                 <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000026</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">optimizing</span>           <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000021</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">statistics</span>           <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">378110</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">004000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">004000</span> <span class="o">|</span>                <span class="mi">63</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>               <span class="mi">226</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">preparing</span>            <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000038</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">executing</span>            <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sorting</span> <span class="n">result</span>       <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000048</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">3</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sending</span> <span class="n">data</span>         <span class="o">|</span> <span class="mi">21</span><span class="p">.</span><span class="mi">590753</span> <span class="o">|</span> <span class="mi">3</span><span class="p">.</span><span class="mi">760000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">308000</span> <span class="o">|</span>             <span class="mi">14794</span> <span class="o">|</span>                 <span class="mi">854</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>            <span class="mi">136593</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">end</span>                  <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000014</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">query</span> <span class="n">end</span>            <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">closing</span> <span class="kp">tables</span>       <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">freeing</span> <span class="n">items</span>        <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000017</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">cleaning</span> <span class="n">up</span>          <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+-----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">show</span> <span class="n">profile</span> <span class="n">CPU</span><span class="p">,</span> <span class="n">CONTEXT</span> <span class="n">SWITCHES</span><span class="p">,</span> <span class="n">PAGE</span> <span class="n">FAULTS</span> <span class="k">for</span> <span class="n">query</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Status</span>               <span class="o">|</span> <span class="n">Duration</span> <span class="o">|</span> <span class="n">CPU_user</span> <span class="o">|</span> <span class="n">CPU_system</span> <span class="o">|</span> <span class="n">Context_voluntary</span> <span class="o">|</span> <span class="n">Context_involuntary</span> <span class="o">|</span> <span class="n">Page_faults_major</span> <span class="o">|</span> <span class="n">Page_faults_minor</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="k">starting</span>             <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000072</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">checking</span> <span class="n">permissions</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000006</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Opening</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000016</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">System</span> <span class="k">lock</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">init</span>                 <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000027</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">optimizing</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000015</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">statistics</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000141</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">preparing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000020</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">executing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sorting</span> <span class="n">result</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000026</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sending</span> <span class="n">data</span>         <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">804630</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">804000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                <span class="mi">19</span> <span class="o">|</span>                 <span class="mi">105</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                <span class="mi">36</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">end</span>                  <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000015</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">query</span> <span class="n">end</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">closing</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">freeing</span> <span class="n">items</span>        <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000023</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">cleaning</span> <span class="n">up</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000006</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is when things gets interesting: the times goes into <code>sending data</code></p>

<p>From <a href="http://dev.mysql.com/doc/refman/5.1/en/general-thread-states.html">MySQL documentation page</a>:</p>

<blockquote><p>The thread is reading and processing rows for a SELECT statement, and sending
data to the client. Because operations occurring during this state tend to
perform large amounts of disk access (reads), it is often the longest-running
state over the lifetime of a given query.</p></blockquote>

<p>The time goes in actually executing the query, bringing the data from the disk
and pushing this data to the client.</p>

<p>But besides the time used for sending this data, there is a really interesting
part in the right side of the profiling table:
<a href="http://en.wikipedia.org/wiki/Context_switch">context switches</a> and
<a href="http://en.wikipedia.org/wiki/Page_fault">page faults</a>.</p>

<p>What MySQL is telling us is that it required context switching and page
faulting with some system time to resolve the query the first time, but not
that much the second time.</p>

<p>This was a surprise to me, because I usually think that things like
context switches and page faults are OS businesses. Here I discovered
that a MySQL server acts like an OS by itself: it controls context switches,
and it also manages its own memory allocation, pulling and pushing pages
from disk as needed.</p>

<p>But what is this data it is bringing from the disk? What matters more to any
database server: indexes.</p>

<h2>Size matters</h2>

<p>Initially I was running queries on a server where indexes almost fit in memory,
I know this because I checked using a query as simple as this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">SELECT</span> <span class="nf">sum</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">DATA_LENGTH</span><span class="p">)</span> <span class="k">as</span> <span class="n">DATA_SIZE_IN_BYTES</span><span class="p">,</span>
</span><span class='line'>    <span class="nf">CONCAT</span><span class="p">(</span><span class="nf">format</span><span class="p">(</span><span class="nf">sum</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">DATA_LENGTH</span><span class="p">)</span><span class="o">/</span><span class="nf">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">20</span><span class="p">),</span> <span class="mi">2</span><span class="p">),</span> <span class="s1">&#39;mb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">DATA_SIZE_HR</span><span class="p">,</span>
</span><span class='line'>    <span class="nf">sum</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">INDEX_LENGTH</span><span class="p">)</span> <span class="k">as</span> <span class="n">INDEXES_SIZE_IN_BYTES</span><span class="p">,</span>
</span><span class='line'>    <span class="nf">CONCAT</span><span class="p">(</span><span class="nf">format</span><span class="p">(</span><span class="nf">sum</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">INDEX_LENGTH</span><span class="p">)</span><span class="o">/</span><span class="nf">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">20</span><span class="p">),</span> <span class="mi">2</span><span class="p">),</span> <span class="s1">&#39;mb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">INDEX_SIZE_HR</span><span class="p">,</span>
</span><span class='line'>    <span class="n">M</span><span class="p">.</span><span class="n">MEMORY_SIZE</span> <span class="k">as</span> <span class="n">MEMORY_SIZE_IN_BYTES</span><span class="p">,</span>
</span><span class='line'>    <span class="nf">CONCAT</span><span class="p">(</span><span class="nf">format</span><span class="p">((</span><span class="n">M</span><span class="p">.</span><span class="n">MEMORY_SIZE</span><span class="p">)</span><span class="o">/</span><span class="nf">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">20</span><span class="p">),</span> <span class="mi">2</span><span class="p">),</span><span class="s1">&#39;mb&#39;</span><span class="p">)</span> <span class="k">AS</span> <span class="n">AVAILABLE_MEMORY_HR</span><span class="p">,</span>
</span><span class='line'>    <span class="nf">CONCAT</span><span class="p">(</span><span class="nf">format</span><span class="p">((</span><span class="nf">sum</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">INDEX_LENGTH</span><span class="p">)</span><span class="o">/</span><span class="nf">sum</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">DATA_LENGTH</span><span class="p">))</span> <span class="o">*</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="s1">&#39;%&#39;</span><span class="p">)</span> <span class="k">AS</span> <span class="n">INDEX_TO_DATA_RATIO</span><span class="p">,</span>
</span><span class='line'>    <span class="nf">CONCAT</span><span class="p">(</span><span class="nf">format</span><span class="p">((</span><span class="nf">sum</span><span class="p">(</span><span class="n">T</span><span class="p">.</span><span class="n">INDEX_LENGTH</span><span class="p">)</span><span class="o">/</span><span class="n">M</span><span class="p">.</span><span class="n">MEMORY_SIZE</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="s1">&#39;%&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">USED_MEMORY_RATIO</span>
</span><span class='line'><span class="k">FROM</span> <span class="n">information_schema</span><span class="p">.</span><span class="kp">tables</span> <span class="k">as</span> <span class="n">T</span><span class="p">,</span>
</span><span class='line'>    <span class="p">(</span><span class="k">select</span> <span class="n">VARIABLE_VALUE</span> <span class="k">AS</span> <span class="n">MEMORY_SIZE</span>
</span><span class='line'>    <span class="k">from</span> <span class="n">information_schema</span><span class="p">.</span><span class="n">GLOBAL_VARIABLES</span>
</span><span class='line'>    <span class="k">where</span> <span class="n">VARIABLE_NAME</span> <span class="k">LIKE</span> <span class="s1">&#39;INNODB_BUFFER_POOL_SIZE&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">M</span>
</span><span class='line'><span class="k">WHERE</span> <span class="n">table_schema</span> <span class="o">=</span> <span class="s1">&#39;datasite&#39;</span> <span class="k">AND</span> <span class="kp">ENGINE</span> <span class="o">=</span> <span class="s1">&#39;InnoDB&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This query will deliver a result like this with my 5M rows data sample:</p>

<figure class='code'><figcaption><span>for the whole schema</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>   <span class="n">DATA_SIZE_IN_BYTES</span><span class="p">:</span> <span class="mi">1736884224</span>
</span><span class='line'>         <span class="n">DATA_SIZE_HR</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span><span class="mi">656</span><span class="p">.</span><span class="mi">42</span><span class="n">mb</span>
</span><span class='line'><span class="n">INDEXES_SIZE_IN_BYTES</span><span class="p">:</span> <span class="mi">937213952</span>
</span><span class='line'>        <span class="n">INDEX_SIZE_HR</span><span class="p">:</span> <span class="mi">893</span><span class="p">.</span><span class="mi">80</span><span class="n">mb</span>
</span><span class='line'> <span class="n">MEMORY_SIZE_IN_BYTES</span><span class="p">:</span> <span class="mi">767557632</span>
</span><span class='line'>  <span class="n">AVAILABLE_MEMORY_HR</span><span class="p">:</span> <span class="mi">732</span><span class="p">.</span><span class="mi">00</span><span class="n">mb</span>
</span><span class='line'>  <span class="n">INDEX_TO_DATA_RATIO</span><span class="p">:</span> <span class="mi">53</span><span class="p">.</span><span class="mi">96</span><span class="o">%</span>
</span><span class='line'>    <span class="n">USED_MEMORY_RATIO</span><span class="p">:</span> <span class="mi">122</span><span class="p">.</span><span class="mi">10</span><span class="o">%</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span>for a specific table</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>           <span class="n">TABLE_NAME</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>   <span class="n">DATA_SIZE_IN_BYTES</span><span class="p">:</span> <span class="mi">451821568</span>
</span><span class='line'>         <span class="n">DATA_SIZE_HR</span><span class="p">:</span> <span class="mi">430</span><span class="p">.</span><span class="mi">89</span><span class="n">mb</span>
</span><span class='line'><span class="n">INDEXES_SIZE_IN_BYTES</span><span class="p">:</span> <span class="mi">823754752</span>
</span><span class='line'>        <span class="n">INDEX_SIZE_HR</span><span class="p">:</span> <span class="mi">785</span><span class="p">.</span><span class="mi">59</span><span class="n">mb</span>
</span><span class='line'> <span class="n">MEMORY_SIZE_IN_BYTES</span><span class="p">:</span> <span class="mi">767557632</span>
</span><span class='line'>  <span class="n">AVAILABLE_MEMORY_HR</span><span class="p">:</span> <span class="mi">732</span><span class="p">.</span><span class="mi">00</span><span class="n">mb</span>
</span><span class='line'>  <span class="n">INDEX_TO_DATA_RATIO</span><span class="p">:</span> <span class="mi">182</span><span class="p">.</span><span class="mi">32</span><span class="o">%</span>
</span><span class='line'>    <span class="n">USED_MEMORY_RATIO</span><span class="p">:</span> <span class="mi">107</span><span class="p">.</span><span class="mi">32</span><span class="o">%</span>
</span></code></pre></td></tr></table></div></figure>


<p>So, out of 732mb available ram, 785mb are going to be used for indexes.</p>

<p>This is not very precise, as it is built using allocated files space in the
mysql schema filesystem, but is good enough to get a rough idea of your data set
and how is it distributed. Bear in mind that this does not consider index
fragmentation so a recently restored dump will be in much better shape than a
heavy written table and index.</p>

<h2>Understanding how indexes work</h2>

<p>In MySQL an index is usually a <a href="http://en.wikipedia.org/wiki/B-tree">B-Tree</a>,
The key point of a B-Tree is that is can be stored in disk as many chunks, each
one being the same size, and each of these chunks can be called <code>page</code></p>

<p>When the query planner decided to use the <code>code</code> index, it selected an index
with a cardinality close to the primary key, so it was forced to traverse this
tree to find the range of elements that match the query, each row selected
from the index was then tested for the rest of the filter constraint: does it
belong to the right company? is it the right kind? etc.</p>

<p>This is showed by the <code>explain extended</code> query plan, that query plan is
basically saying what index is going to be used, and then that each row is going
to be filtered by the where clause.</p>

<p>That query plan is also saying that it will test 1776463 rows to return 5.</p>

<p>This index, and all the rest of the indexes in the table use something around
780mb; after running the query, the allocated memory allocated is&hellip;
<em>surprise</em>: 780mb in 29762 pages</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">--------------------</span><span class="c1">--</span>
</span><span class='line'><span class="c1">BUFFER POOL AND MEMORY</span>
</span><span class='line'><span class="o">--------------------</span><span class="c1">--</span>
</span><span class='line'><span class="c1">Total memory allocated 785547264; in additional pool allocated 0</span>
</span><span class='line'><span class="n">Dictionary</span> <span class="n">memory</span> <span class="n">allocated</span> <span class="mi">87339</span>
</span><span class='line'><span class="n">Buffer</span> <span class="n">pool</span> <span class="n">size</span>   <span class="mi">46847</span>
</span><span class='line'><span class="n">Free</span> <span class="n">buffers</span>       <span class="mi">11842</span>
</span><span class='line'><span class="k">Database</span> <span class="n">pages</span>     <span class="mi">29762</span>
</span><span class='line'><span class="n">Old</span> <span class="k">database</span> <span class="n">pages</span> <span class="mi">11006</span>
</span></code></pre></td></tr></table></div></figure>


<p>The second time we ran the query, those index pages were already in memory, so
traversing them was <em>only</em> 0.8 seconds. This is linear time execution:
traversing the tree in memory, no system time as no file was read, it is all
userspace time, CPU bound.</p>

<p>The only difference between the first and the second query is that the second
one has all the indexes in memory, while the first one needs to load them from
disk: that is what a MySQL server warmup is.</p>

<p>Now imagine a server with indexes bigger than the available memory, and many
users requesting different chunks of the same index at the same time, a heavy
load situation.
MySQL will do its best to deliver results, but it will need to pull chunks from
disk to then dealocate them to make room for other chunks and keep them coming
and going constantly.</p>

<p>The OS will not see anything of this, well, maybe it will see constant IO, but
how can you determine at the OS level if what the MySQL is doing is ok or not?
you will need to go check in the innodb status to see if there is
<a href="http://www.percona.com/blog/2011/07/28/how-innodb-contention-may-manifest-itself/">contention</a>.
Because the OS will only see <code>read</code> system calls as files are already opened,
and that is expected to happen in a database server with heavy read load.</p>

<h2>Let&rsquo;s play</h2>

<p>Historically understanding how indexes work was always a
<a href="http://en.wikipedia.org/wiki/Database_administrator">DBA</a> thing. If you ever
look for <code>composite index</code> information you may find some replies in
<a href="http://stackoverflow.com/questions/1823685/when-should-i-use-a-composite-index">stackoverflow</a>,
and some general comments about what are they for, but there is usually no
real world examples that explain how they work besides
<a href="http://dev.mysql.com/doc/refman/5.0/en/multiple-column-indexes.html">this</a>
MySQL page, or at least nothing I found by that time.</p>

<p>In a nutshell, a composite index can be described as a tree of trees.</p>

<p>This means that when we use many fields for an index we are first going to
create a tree for that initial field, and the value bucket of each key is going
to be another tree where the same thing will happen for the second field, and
so on, until we have the row identifiers.</p>

<p>So, if we create a composite index in this model, for example, using
<code>company_id</code> and then <code>code</code>, we will have one tree where we will search by the
company id first, and then on the second tree we will search by all the codes
that belong to that company.</p>

<p>The most interesting part of all this is that we are going to fragment the index
in many blocks, making this second <code>code</code> index <em>smaller</em> from the loading and
memory usage point of view.</p>

<p>Let&rsquo;s try that</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">document</span> <span class="k">DROP</span> <span class="k">INDEX</span> <span class="n">code_idx</span><span class="p">,</span>
</span><span class='line'><span class="k">ADD</span> <span class="k">INDEX</span> <span class="ss">`company_code`</span> <span class="p">(</span><span class="ss">`company_id`</span><span class="p">,</span> <span class="ss">`code`</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">show</span> <span class="k">index</span> <span class="k">from</span> <span class="n">document</span> <span class="err">\</span><span class="n">G</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">8</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_code</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">company_id</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">9</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>   <span class="n">Non_unique</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_code</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">code</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">3552927</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">explain</span> <span class="n">extended</span> <span class="o">&lt;</span><span class="n">the</span> <span class="n">query</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>           <span class="n">id</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">select_type</span><span class="p">:</span> <span class="n">SIMPLE</span>
</span><span class='line'>        <span class="k">table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>         <span class="n">type</span><span class="p">:</span> <span class="n">ref</span>
</span><span class='line'><span class="n">possible_keys</span><span class="p">:</span> <span class="n">kind_idx</span><span class="p">,</span><span class="n">status_idx</span><span class="p">,</span><span class="n">company_code</span>
</span><span class='line'>          <span class="k">key</span><span class="p">:</span> <span class="n">company_code</span>
</span><span class='line'>      <span class="n">key_len</span><span class="p">:</span> <span class="mi">4</span>
</span><span class='line'>          <span class="n">ref</span><span class="p">:</span> <span class="n">const</span>
</span><span class='line'>         <span class="n">rows</span><span class="p">:</span> <span class="mi">1062780</span>
</span><span class='line'>     <span class="n">filtered</span><span class="p">:</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span>
</span><span class='line'>        <span class="n">Extra</span><span class="p">:</span> <span class="k">Using</span> <span class="k">where</span>
</span></code></pre></td></tr></table></div></figure>


<p>The query plan looks a bit different, the key size is much smaller because it is
only counting on the first part of the index, which is an integer value, but the
row count is 1M records instead of 1.7M, also the <em>join type</em> is
<a href="http://dev.mysql.com/doc/refman/5.1/en/explain-output.html#jointype_ref">ref</a>
and then
<a href="http://dev.mysql.com/doc/refman/5.1/en/explain-output.html#jointype_const">const</a>,
this is way better.</p>

<p>Lets run it, first: <code>5 rows in set (4.11 sec)</code> and second <code>5 rows in set (0.93 sec)</code></p>

<p>And the profiling results are:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Status</span>               <span class="o">|</span> <span class="n">Duration</span> <span class="o">|</span> <span class="n">CPU_user</span> <span class="o">|</span> <span class="n">CPU_system</span> <span class="o">|</span> <span class="n">Context_voluntary</span> <span class="o">|</span> <span class="n">Context_involuntary</span> <span class="o">|</span> <span class="n">Page_faults_major</span> <span class="o">|</span> <span class="n">Page_faults_minor</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="k">starting</span>             <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000083</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">checking</span> <span class="n">permissions</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Opening</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000034</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">System</span> <span class="k">lock</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000009</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">init</span>                 <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000030</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">optimizing</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000017</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">statistics</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">171065</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">004000</span> <span class="o">|</span>                <span class="mi">37</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>               <span class="mi">168</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">preparing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000034</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">executing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sorting</span> <span class="n">result</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sending</span> <span class="n">data</span>         <span class="o">|</span> <span class="mi">3</span><span class="p">.</span><span class="mi">940003</span> <span class="o">|</span> <span class="mi">1</span><span class="p">.</span><span class="mi">796000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">116000</span> <span class="o">|</span>              <span class="mi">7350</span> <span class="o">|</span>                  <span class="mi">69</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>             <span class="mi">41709</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">end</span>                  <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000018</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">query</span> <span class="n">end</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000006</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">closing</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">freeing</span> <span class="n">items</span>        <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000020</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000002</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">cleaning</span> <span class="n">up</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Status</span>               <span class="o">|</span> <span class="n">Duration</span> <span class="o">|</span> <span class="n">CPU_user</span> <span class="o">|</span> <span class="n">CPU_system</span> <span class="o">|</span> <span class="n">Context_voluntary</span> <span class="o">|</span> <span class="n">Context_involuntary</span> <span class="o">|</span> <span class="n">Page_faults_major</span> <span class="o">|</span> <span class="n">Page_faults_minor</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="k">starting</span>             <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000077</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">checking</span> <span class="n">permissions</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Opening</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000017</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">System</span> <span class="k">lock</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000008</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">init</span>                 <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000030</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">optimizing</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000017</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">statistics</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000135</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">preparing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000023</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">executing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sorting</span> <span class="n">result</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sending</span> <span class="n">data</span>         <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">933226</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">940000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                <span class="mi">21</span> <span class="o">|</span>                   <span class="mi">2</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">end</span>                  <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000015</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">query</span> <span class="n">end</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">closing</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">freeing</span> <span class="n">items</span>        <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000023</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">cleaning</span> <span class="n">up</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>We cut 17 seconds from a cold server query execution just by changing <strong>one</strong>
index, not bad.</p>

<p>I think we can do it better, why don&rsquo;t we add the status field to the index?
lets try that and see what happens</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">document</span>
</span><span class='line'>    <span class="k">DROP</span> <span class="k">INDEX</span> <span class="ss">`company_code`</span><span class="p">,</span>
</span><span class='line'>    <span class="k">DROP</span> <span class="k">INDEX</span> <span class="ss">`status_idx`</span><span class="p">,</span>
</span><span class='line'>    <span class="k">ADD</span> <span class="k">INDEX</span> <span class="ss">`company_status_code`</span> <span class="p">(</span><span class="ss">`company_id`</span><span class="p">,</span> <span class="ss">`status`</span><span class="p">,</span> <span class="ss">`code`</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">show</span> <span class="k">index</span> <span class="k">from</span> <span class="n">document</span> <span class="err">\</span><span class="n">G</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">7</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_status_code</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">company_id</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">8</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_status_code</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">status</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">9</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_status_code</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">code</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">3556369</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">explain</span> <span class="n">extended</span> <span class="o">&lt;</span><span class="n">the</span> <span class="n">query</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>           <span class="n">id</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">select_type</span><span class="p">:</span> <span class="n">SIMPLE</span>
</span><span class='line'>        <span class="k">table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>         <span class="n">type</span><span class="p">:</span> <span class="n">ref</span>
</span><span class='line'><span class="n">possible_keys</span><span class="p">:</span> <span class="n">kind_idx</span><span class="p">,</span><span class="n">company_status_code</span>
</span><span class='line'>          <span class="k">key</span><span class="p">:</span> <span class="n">kind_idx</span>
</span><span class='line'>      <span class="n">key_len</span><span class="p">:</span> <span class="mi">32</span>
</span><span class='line'>          <span class="n">ref</span><span class="p">:</span> <span class="n">const</span>
</span><span class='line'>         <span class="n">rows</span><span class="p">:</span> <span class="mi">1778184</span>
</span><span class='line'>     <span class="n">filtered</span><span class="p">:</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span>
</span><span class='line'>        <span class="n">Extra</span><span class="p">:</span> <span class="k">Using</span> <span class="k">where</span><span class="p">;</span> <span class="k">Using</span> <span class="n">filesort</span>
</span></code></pre></td></tr></table></div></figure>


<p>This query is going to be really different, MySQL is not picking the index we
created, I&rsquo;m guessing this is because we are filtering the second index field
by inequality, but in any case, the interesting part here is that the query
plan states it will need to sort the result, lets see what happens when MySQL
has to sort the result.</p>

<p>First execution is <code>5 rows in set (12.17 sec)</code> and second execution is <code>5 rows
in set (2.91 sec)</code></p>

<p>The profiling goes like this</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">+----------------------+-----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Status</span>               <span class="o">|</span> <span class="n">Duration</span>  <span class="o">|</span> <span class="n">CPU_user</span> <span class="o">|</span> <span class="n">CPU_system</span> <span class="o">|</span> <span class="n">Context_voluntary</span> <span class="o">|</span> <span class="n">Context_involuntary</span> <span class="o">|</span> <span class="n">Page_faults_major</span> <span class="o">|</span> <span class="n">Page_faults_minor</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+-----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="k">starting</span>             <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000102</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">004000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">checking</span> <span class="n">permissions</span> <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000008</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Opening</span> <span class="kp">tables</span>       <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000019</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">System</span> <span class="k">lock</span>          <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000009</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">init</span>                 <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000031</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">optimizing</span>           <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000019</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">statistics</span>           <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000132</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">preparing</span>            <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000025</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">executing</span>            <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sorting</span> <span class="n">result</span>       <span class="o">|</span> <span class="mi">12</span><span class="p">.</span><span class="mi">174824</span> <span class="o">|</span> <span class="mi">5</span><span class="p">.</span><span class="mi">580000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">368000</span> <span class="o">|</span>             <span class="mi">21405</span> <span class="o">|</span>                  <span class="mi">95</span> <span class="o">|</span>                 <span class="mi">3</span> <span class="o">|</span>            <span class="mi">138037</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sending</span> <span class="n">data</span>         <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000053</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">end</span>                  <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">query</span> <span class="n">end</span>            <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000006</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">closing</span> <span class="kp">tables</span>       <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000009</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">freeing</span> <span class="n">items</span>        <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000022</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000002</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">cleaning</span> <span class="n">up</span>          <span class="o">|</span>  <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+-----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Status</span>               <span class="o">|</span> <span class="n">Duration</span> <span class="o">|</span> <span class="n">CPU_user</span> <span class="o">|</span> <span class="n">CPU_system</span> <span class="o">|</span> <span class="n">Context_voluntary</span> <span class="o">|</span> <span class="n">Context_involuntary</span> <span class="o">|</span> <span class="n">Page_faults_major</span> <span class="o">|</span> <span class="n">Page_faults_minor</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="k">starting</span>             <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000094</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">checking</span> <span class="n">permissions</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000008</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Opening</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000019</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">System</span> <span class="k">lock</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000016</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">init</span>                 <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000039</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">optimizing</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000020</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">statistics</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000128</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">preparing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000028</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">executing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sorting</span> <span class="n">result</span>       <span class="o">|</span> <span class="mi">2</span><span class="p">.</span><span class="mi">914472</span> <span class="o">|</span> <span class="mi">2</span><span class="p">.</span><span class="mi">924000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                <span class="mi">69</span> <span class="o">|</span>                   <span class="mi">5</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>               <span class="mi">488</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sending</span> <span class="n">data</span>         <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000045</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">end</span>                  <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">query</span> <span class="n">end</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">closing</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">freeing</span> <span class="n">items</span>        <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000016</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000002</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">cleaning</span> <span class="n">up</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>Two things are interesting here, the first is that the time goes in <code>Sorting
result</code> both times, this is expected, but the first execution is also including
the index loading time into the sorting, so the sorting operation is actually
executing the query and loading all the required index pages.</p>

<p>The second, sorting is slow, it is much more efficient to load records in order
from the index even when the index is bad than sorting on the fly.</p>

<p>As a final try, paying more attention to the shape of the query, lets create an
index that includes all the fields that are going to be an equality constant
comparison (<em>company id</em> and <em>kind</em>) and that ends with the range value (<em>code</em>)
and try again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">&gt;</span> <span class="k">ALTER</span> <span class="k">TABLE</span> <span class="n">document</span>
</span><span class='line'>    <span class="k">DROP</span> <span class="k">INDEX</span> <span class="ss">`company_status_code`</span><span class="p">,</span>
</span><span class='line'>    <span class="k">ADD</span> <span class="k">INDEX</span> <span class="ss">`status`</span> <span class="p">(</span><span class="ss">`status`</span><span class="p">),</span>
</span><span class='line'>    <span class="k">ADD</span> <span class="k">INDEX</span> <span class="ss">`company_kind_code`</span> <span class="p">(</span><span class="ss">`company_id`</span><span class="p">,</span> <span class="ss">`kind`</span><span class="p">,</span> <span class="ss">`code`</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">show</span> <span class="k">index</span> <span class="k">from</span> <span class="n">document</span> <span class="err">\</span><span class="n">G</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">8</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_kind_code</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">company_id</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">9</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_kind_code</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">2</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">kind</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">18</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">10</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>        <span class="k">Table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>     <span class="n">Key_name</span><span class="p">:</span> <span class="n">company_kind_code</span>
</span><span class='line'> <span class="n">Seq_in_index</span><span class="p">:</span> <span class="mi">3</span>
</span><span class='line'>  <span class="n">Column_name</span><span class="p">:</span> <span class="n">code</span>
</span><span class='line'>  <span class="n">Cardinality</span><span class="p">:</span> <span class="mi">3553811</span>
</span><span class='line'>   <span class="n">Index_type</span><span class="p">:</span> <span class="n">BTREE</span>
</span><span class='line'>
</span><span class='line'><span class="o">&gt;</span> <span class="k">explain</span> <span class="n">extended</span> <span class="o">&lt;</span><span class="n">the</span> <span class="n">query</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>           <span class="n">id</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">select_type</span><span class="p">:</span> <span class="n">SIMPLE</span>
</span><span class='line'>        <span class="k">table</span><span class="p">:</span> <span class="n">document</span>
</span><span class='line'>         <span class="n">type</span><span class="p">:</span> <span class="n">range</span>
</span><span class='line'><span class="n">possible_keys</span><span class="p">:</span> <span class="n">kind_idx</span><span class="p">,</span><span class="n">status</span><span class="p">,</span><span class="n">company_kind_code</span>
</span><span class='line'>          <span class="k">key</span><span class="p">:</span> <span class="n">company_kind_code</span>
</span><span class='line'>      <span class="n">key_len</span><span class="p">:</span> <span class="mi">98</span>
</span><span class='line'>          <span class="n">ref</span><span class="p">:</span> <span class="no">NULL</span>
</span><span class='line'>         <span class="n">rows</span><span class="p">:</span> <span class="mi">392820</span>
</span><span class='line'>     <span class="n">filtered</span><span class="p">:</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span>
</span><span class='line'>        <span class="n">Extra</span><span class="p">:</span> <span class="k">Using</span> <span class="k">where</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is quite different, the first thing to notice is that in this case the
query planner picked the right index this time.</p>

<p>The length of the key is 98 bytes, which is the full length of the composite
index key so all the index trees are going to be used.</p>

<p>And finally, the rows that are going to be examined lowered the number to almost
400.000 rows, which is a lot less, and is how many records exists for that
company and kind.</p>

<p>How does the same query run with this index? like this: first execution <code>5 rows
in set (0.03 sec)</code> and second execution <code>5 rows in set (0.00 sec)</code></p>

<p>Impressive, and this is how the profiling looks like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Status</span>               <span class="o">|</span> <span class="n">Duration</span> <span class="o">|</span> <span class="n">CPU_user</span> <span class="o">|</span> <span class="n">CPU_system</span> <span class="o">|</span> <span class="n">Context_voluntary</span> <span class="o">|</span> <span class="n">Context_involuntary</span> <span class="o">|</span> <span class="n">Page_faults_major</span> <span class="o">|</span> <span class="n">Page_faults_minor</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="k">starting</span>             <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000107</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">checking</span> <span class="n">permissions</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000008</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Opening</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000019</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">System</span> <span class="k">lock</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000009</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">init</span>                 <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000031</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">optimizing</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000018</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">statistics</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000149</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">preparing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000021</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">executing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sorting</span> <span class="n">result</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sending</span> <span class="n">data</span>         <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">035127</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">1</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                <span class="mi">15</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">end</span>                  <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000008</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">query</span> <span class="n">end</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000006</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">closing</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">freeing</span> <span class="n">items</span>        <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000016</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">cleaning</span> <span class="n">up</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="n">Status</span>               <span class="o">|</span> <span class="n">Duration</span> <span class="o">|</span> <span class="n">CPU_user</span> <span class="o">|</span> <span class="n">CPU_system</span> <span class="o">|</span> <span class="n">Context_voluntary</span> <span class="o">|</span> <span class="n">Context_involuntary</span> <span class="o">|</span> <span class="n">Page_faults_major</span> <span class="o">|</span> <span class="n">Page_faults_minor</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="k">starting</span>             <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000104</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">checking</span> <span class="n">permissions</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000009</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Opening</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000019</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">System</span> <span class="k">lock</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000008</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">init</span>                 <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000031</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">optimizing</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000018</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">statistics</span>           <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000145</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">preparing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000021</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">executing</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000003</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sorting</span> <span class="n">result</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000004</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">Sending</span> <span class="n">data</span>         <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000115</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">end</span>                  <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">query</span> <span class="n">end</span>            <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">closing</span> <span class="kp">tables</span>       <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000006</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">freeing</span> <span class="n">items</span>        <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000016</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">logging</span> <span class="n">slow</span> <span class="n">query</span>   <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000007</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="n">cleaning</span> <span class="n">up</span>          <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000005</span> <span class="o">|</span> <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>   <span class="mi">0</span><span class="p">.</span><span class="mi">000000</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                   <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>                 <span class="mi">0</span> <span class="o">|</span>
</span><span class='line'><span class="o">+----------------------+----------+----------+------------+-------------------+---------------------+-------------------+-------------------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>The highlight is that the first query does some page loading from disk, but just
what it needs to resolve the query, this is because it can pick the company id
directly from the first index, then the kind from the second one, and finally
the codes are directly sorted and prefiltered by those prior indexes.</p>

<p>Then traversing the final tree is linear but finding the right starting point
in the set is a logarithmic operation, where each element will hardly be
discarded by the rest of the clauses, because by index shape it matches
already.</p>

<p>The number of operations required to resolve the query is drastically smaller
just because the data is correctly indexed for the query, everything falls in
place.</p>

<p>And what about memory usage?</p>

<p>If we take a second look at the <code>innodb engine state</code> we will see quite a
different image than before:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">Total</span> <span class="n">memory</span> <span class="n">allocated</span> <span class="mi">785547264</span><span class="p">;</span> <span class="k">in</span> <span class="n">additional</span> <span class="n">pool</span> <span class="n">allocated</span> <span class="mi">0</span>
</span><span class='line'><span class="n">Dictionary</span> <span class="n">memory</span> <span class="n">allocated</span> <span class="mi">85291</span>
</span><span class='line'><span class="n">Buffer</span> <span class="n">pool</span> <span class="n">size</span>   <span class="mi">46848</span>
</span><span class='line'><span class="n">Free</span> <span class="n">buffers</span>       <span class="mi">46298</span>
</span><span class='line'><span class="k">Database</span> <span class="n">pages</span>     <span class="mi">550</span>
</span><span class='line'><span class="n">Old</span> <span class="k">database</span> <span class="n">pages</span> <span class="mi">223</span>
</span></code></pre></td></tr></table></div></figure>


<p>Memory allocation is the same, it means that the MySQL already grabbed the
memory it needs to fully load the index, even being it a bit smaller now because
of the new shape (701.97mb).</p>

<p>But there is a big difference with the previous numbers, loaded pages is 550 now
whereas in the initial query it was 29762; this means that only the 1.84% of
index pages where needed to resolve the query, this is quite an optimization
without even changing the query.</p>

<h2>Final thoughts</h2>

<p>As I said initially, this was not about fine tuning MySQL, but about
understanding how it works. And this is not a silver bullet, but an intent to
explain what I learnt the hard way.</p>

<p>There is one more thing to say about this situation: with more memory, the
constant index loading gets greatly reduced, because there is more room to move
things around, but on the long run the problem would be the same, and eventually
what would happen is that we would hit a processor bounded limit before
exhausting memory.</p>

<p>If I have to say one thing about all this it is: mind your indexes, and mind
your queries, understand how you database server works and where the limits are.</p>

<p>The best you can do is setup your data in a way that the access to it is just
direct and natural, throwing more hardware at a problem is not always the
solution, it is just delaying the problem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Beasts in the Wild or How to Kill MySQL With a Query]]></title>
    <link href="http://pcarranza.github.io/blog/2014/10/30/about-beasts-in-the-wild/"/>
    <updated>2014-10-30T16:34:58-04:00</updated>
    <id>http://pcarranza.github.io/blog/2014/10/30/about-beasts-in-the-wild</id>
    <content type="html"><![CDATA[<p>While learning how to tune a MySQL instance, all the tunning tools warned me not to
assign memory beyond 80% of the available to innodb. They say this for a reason,
but what reason is it?</p>

<!--more-->


<p>Long story short, I have a MySQL instance running with around 5M records on one
particular table, I know for a fact that the indexes do not fit in memory, and
I also have a nasty query that will force the index to be loaded in memory to
resolve it.</p>

<p>Let&rsquo;s see what happens when we tweak innodb buffer pool on one side or another.</p>

<h2>Lets go big first</h2>

<p>I have little memory on the host, only 512M, so it is not hard to go beyond that
limit, if we assign a significant number to innodb the remaining memory is not much,
so there is little room for failure.</p>

<p>Let&rsquo;s play:</p>

<figure class='code'><figcaption><span>/etc/mysql/conf.d/innodb.cnf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="k">[mysqld]</span>
</span><span class='line'><span class="na">innodb_buffer_pool_size</span> <span class="o">=</span> <span class="s">402653184</span>
</span><span class='line'><span class="na">innodb_file_per_table</span> <span class="o">=</span> <span class="s">1</span>
</span><span class='line'><span class="na">innodb_flush_method</span> <span class="o">=</span> <span class="s">O_DIRECT</span>
</span><span class='line'><span class="na">query_cache_type</span> <span class="o">=</span> <span class="s">0</span>
</span></code></pre></td></tr></table></div></figure>


<p>That is roughly 400Mb out of 512, the 79% of the available memory dedicated to the
innodb process. There are some other details in this configuration, but they are not
relevant for this particular test.
Innodb is going to use this memory basically for loading indexes into
that memory.</p>

<p>So what would happen if I run a nasty query?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="k">select</span> <span class="nf">max</span><span class="p">(</span><span class="n">one_thing</span><span class="p">),</span> <span class="n">a_relevant_id</span>
</span><span class='line'><span class="k">from</span> <span class="n">a_large_table</span> <span class="k">where</span> <span class="n">a_grouping_string_with_a_key</span> <span class="k">like</span> <span class="s1">&#39;A_PARTIAL_GROUP-%&#39;</span> <span class="k">and</span> <span class="n">other_key</span> <span class="o">=</span> <span class="s1">&#39;VALUE&#39;</span>
</span><span class='line'><span class="k">group</span> <span class="k">by</span> <span class="n">a_relevant_id</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Nothing fancy, this query should find some max values and return 4 records, but
while running it the result is:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">ERROR</span> <span class="mi">2006</span> <span class="p">(</span><span class="n">HY000</span><span class="p">):</span> <span class="n">MySQL</span> <span class="n">server</span> <span class="n">has</span> <span class="n">gone</span> <span class="n">away</span>
</span><span class='line'><span class="n">No</span> <span class="n">connection</span><span class="p">.</span> <span class="n">Trying</span> <span class="k">to</span> <span class="n">reconnect</span><span class="p">...</span>
</span><span class='line'><span class="n">Connection</span> <span class="n">id</span><span class="p">:</span>    <span class="mi">36</span>
</span><span class='line'><span class="n">Current</span> <span class="k">database</span><span class="p">:</span> <span class="n">my_database</span>
</span><span class='line'>
</span><span class='line'><span class="n">ERROR</span> <span class="mi">2013</span> <span class="p">(</span><span class="n">HY000</span><span class="p">):</span> <span class="n">Lost</span> <span class="n">connection</span> <span class="k">to</span> <span class="n">MySQL</span> <span class="n">server</span> <span class="n">during</span> <span class="n">query</span>
</span></code></pre></td></tr></table></div></figure>


<p>What has just happened?</p>

<p>Let&rsquo;s take a look at the <code>vmstat</code> result sampling every 1 second while reproducing this behavior:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="n">procs</span> <span class="o">-----------</span><span class="n">memory</span><span class="o">--------</span><span class="c1">-- ---swap-- -----io---- -system-- ----cpu----</span>
</span><span class='line'> <span class="n">r</span>  <span class="n">b</span>   <span class="n">swpd</span>   <span class="n">free</span>   <span class="n">buff</span>  <span class="n">cache</span>   <span class="n">si</span>   <span class="n">so</span>    <span class="n">bi</span>    <span class="n">bo</span>   <span class="k">in</span>   <span class="n">cs</span> <span class="n">us</span> <span class="n">sy</span> <span class="n">id</span> <span class="n">wa</span>
</span><span class='line'> <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">27672</span> <span class="mi">325712</span>   <span class="mi">2028</span>  <span class="mi">45212</span>    <span class="mi">0</span>    <span class="mi">0</span>     <span class="mi">0</span>     <span class="mi">0</span>   <span class="mi">24</span>   <span class="mi">30</span>  <span class="mi">1</span>  <span class="mi">1</span> <span class="mi">98</span>  <span class="mi">0</span>
</span><span class='line'> <span class="mi">1</span>  <span class="mi">0</span>  <span class="mi">27668</span> <span class="mi">300408</span>   <span class="mi">2028</span>  <span class="mi">45224</span>    <span class="mi">0</span>    <span class="mi">0</span> <span class="mi">21408</span>     <span class="mi">0</span>  <span class="mi">373</span>  <span class="mi">719</span> <span class="mi">42</span>  <span class="mi">5</span> <span class="mi">45</span>  <span class="mi">4</span>
</span><span class='line'> <span class="mi">2</span>  <span class="mi">0</span>  <span class="mi">27664</span> <span class="mi">251552</span>   <span class="mi">2028</span>  <span class="mi">45232</span>    <span class="mi">0</span>    <span class="mi">0</span> <span class="mi">41648</span>     <span class="mi">0</span>  <span class="mi">451</span>  <span class="mi">596</span> <span class="mi">79</span> <span class="mi">10</span>  <span class="mi">0</span>  <span class="mi">3</span>
</span><span class='line'> <span class="mi">1</span>  <span class="mi">0</span>  <span class="mi">27664</span> <span class="mi">199580</span>   <span class="mi">2028</span>  <span class="mi">45228</span>    <span class="mi">0</span>    <span class="mi">0</span> <span class="mi">43040</span>     <span class="mi">0</span>  <span class="mi">349</span>  <span class="mi">432</span> <span class="mi">81</span> <span class="mi">12</span>  <span class="mi">0</span>  <span class="mi">1</span>
</span><span class='line'> <span class="mi">1</span>  <span class="mi">0</span>  <span class="mi">27664</span> <span class="mi">130280</span>   <span class="mi">2036</span>  <span class="mi">45220</span>    <span class="mi">0</span>    <span class="mi">0</span> <span class="mi">58384</span>    <span class="mi">40</span>  <span class="mi">391</span>  <span class="mi">511</span> <span class="mi">82</span>  <span class="mi">9</span>  <span class="mi">0</span>  <span class="mi">2</span>
</span><span class='line'> <span class="mi">2</span>  <span class="mi">0</span>  <span class="mi">27664</span>  <span class="mi">86632</span>   <span class="mi">2036</span>  <span class="mi">45228</span>    <span class="mi">0</span>    <span class="mi">0</span> <span class="mi">36864</span>     <span class="mi">0</span>  <span class="mi">433</span>  <span class="mi">414</span> <span class="mi">87</span>  <span class="mi">5</span>  <span class="mi">0</span>  <span class="mi">0</span>
</span><span class='line'> <span class="mi">2</span>  <span class="mi">0</span>  <span class="mi">27664</span>  <span class="mi">44488</span>   <span class="mi">2036</span>  <span class="mi">45224</span>    <span class="mi">0</span>    <span class="mi">0</span> <span class="mi">36832</span>     <span class="mi">0</span>  <span class="mi">336</span>  <span class="mi">299</span> <span class="mi">87</span>  <span class="mi">6</span>  <span class="mi">0</span>  <span class="mi">0</span>
</span><span class='line'> <span class="mi">1</span>  <span class="mi">0</span>  <span class="mi">27664</span>   <span class="mi">6268</span>   <span class="mi">1356</span>  <span class="mi">32340</span>    <span class="mi">0</span>    <span class="mi">0</span> <span class="mi">44112</span>    <span class="mi">44</span>  <span class="mi">362</span>  <span class="mi">438</span> <span class="mi">82</span>  <span class="mi">8</span>  <span class="mi">0</span>  <span class="mi">2</span>
</span><span class='line'> <span class="mi">2</span>  <span class="mi">1</span>  <span class="mi">27660</span> <span class="mi">437800</span>    <span class="mi">376</span>   <span class="mi">7012</span>   <span class="mi">20</span>  <span class="mi">168</span> <span class="mi">30796</span>   <span class="mi">184</span>  <span class="mi">405</span>  <span class="mi">688</span> <span class="mi">71</span> <span class="mi">19</span>  <span class="mi">0</span>  <span class="mi">1</span>
</span><span class='line'> <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">27660</span> <span class="mi">362444</span>    <span class="mi">924</span>  <span class="mi">20688</span>    <span class="mi">0</span>    <span class="mi">0</span> <span class="mi">22580</span>   <span class="mi">156</span>  <span class="mi">727</span> <span class="mi">1698</span> <span class="mi">10</span> <span class="mi">15</span> <span class="mi">62</span>  <span class="mi">7</span>
</span><span class='line'> <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">27660</span> <span class="mi">361692</span>    <span class="mi">932</span>  <span class="mi">21320</span>    <span class="mi">0</span>    <span class="mi">0</span>   <span class="mi">688</span>     <span class="mi">0</span>   <span class="mi">83</span>  <span class="mi">259</span>  <span class="mi">2</span>  <span class="mi">2</span> <span class="mi">96</span>  <span class="mi">0</span>
</span><span class='line'> <span class="mi">0</span>  <span class="mi">0</span>  <span class="mi">27652</span> <span class="mi">346440</span>   <span class="mi">1084</span>  <span class="mi">27352</span>    <span class="mi">4</span>    <span class="mi">0</span> <span class="mi">13516</span>     <span class="mi">0</span>  <span class="mi">650</span> <span class="mi">2576</span> <span class="mi">14</span> <span class="mi">11</span> <span class="mi">65</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The nature of the beasts</h2>

<p>Both mysql and the OS are interesting beasts, if you take a look at the <code>vmstat</code>, mysql will start
expanding memory usage when it needs to, reaching a point where all the buffer pool is assigned and
used. Since these indexes do not fit in this buffer pool, all of it gets used.</p>

<p>But the interesting part is that the query execution and expansion does not happen in the buffer
pool, this memory space is reserved only to load indexes, so that is happening on the other
21% remaining memory on the server, on the heap. If we take a quick simple look at how this
query is planned to be executed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="o">***************************</span> <span class="mi">1</span><span class="p">.</span> <span class="n">row</span> <span class="o">***************************</span>
</span><span class='line'>           <span class="n">id</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">select_type</span><span class="p">:</span> <span class="n">SIMPLE</span>
</span><span class='line'>           <span class="p">...</span>
</span><span class='line'>      <span class="n">key_len</span><span class="p">:</span> <span class="mi">32</span>
</span><span class='line'>          <span class="n">ref</span><span class="p">:</span> <span class="n">const</span>
</span><span class='line'>         <span class="n">rows</span><span class="p">:</span> <span class="mi">2427075</span>
</span><span class='line'>     <span class="n">filtered</span><span class="p">:</span> <span class="mi">100</span><span class="p">.</span><span class="mi">00</span>
</span><span class='line'>        <span class="n">Extra</span><span class="p">:</span> <span class="k">Using</span> <span class="k">where</span><span class="p">;</span> <span class="k">Using</span> <span class="n">temporary</span><span class="p">;</span> <span class="k">Using</span> <span class="n">filesort</span>
</span><span class='line'><span class="mi">1</span> <span class="n">row</span> <span class="k">in</span> <span class="kt">set</span><span class="p">,</span> <span class="mi">1</span> <span class="nf">warning</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>It looks like it will roughly be 70mb of key usage only (key len in bytes, times the row count),
even though MySQL will use a temporary table, it will only be used for storing the data before
returning results. The key must be in memory to resolve the query. And the engine will need
a bit more memory to play around this (sorting for ex).</p>

<h2>So the OS kicks in</h2>

<p>And kills MySQL, since the MySQL query resolution expands beyond available memory, the OS needs
 to find someone to kill to get memory back.</p>

<figure class='code'><figcaption><span>/var/log/syslog</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>Oct 29 06:40:38 localhost kernel: [13063165.642150] select 1 (init), adj 0, size 278, to kill
</span><span class='line'>Oct 29 06:40:38 localhost kernel: [13063165.642156] select 371 (rsyslogd), adj 0, size 539, to kill
</span><span class='line'>Oct 29 06:40:38 localhost kernel: [13063165.642162] select 19651 (mysqld), adj 0, size 111249, to kill
</span><span class='line'>Oct 29 06:40:38 localhost kernel: [13063165.642163] send sigkill to 19651 (mysqld), adj 0, size 111249
</span><span class='line'>Oct 29 06:40:38 localhost kernel: [13063165.698982] type=1400 audit(1414590038.324:30): apparmor=&quot;STATUS&quot; operation=&quot;profile_replace&quot; name=&quot;/usr/sbin/mysqld&quot; pid=19784 comm=&quot;apparmor_parser&quot;
</span></code></pre></td></tr></table></div></figure>


<p>Taking a look at mysql log, this is all we get:</p>

<figure class='code'><figcaption><span>/var/log/mysql/error.log</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>InnoDB: The log sequence number in ibdata files does not match
</span><span class='line'>InnoDB: the log sequence number in the ib_logfiles!
</span><span class='line'>141029  6:40:38  InnoDB: Database was not shut down normally!
</span><span class='line'>InnoDB: Starting crash recovery.
</span><span class='line'>InnoDB: Reading tablespace information from the .ibd files...
</span><span class='line'>InnoDB: Restoring possible half-written data pages from the doublewrite
</span><span class='line'>InnoDB: buffer...
</span><span class='line'>141029  6:40:38  InnoDB: Waiting for the background threads to start
</span></code></pre></td></tr></table></div></figure>


<p>MySQL did not see it coming.</p>

<h2>And what if</h2>

<p>We lower the memory for innodb to, say, half the available memory?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='cfg'><span class='line'><span class="na">innodb_buffer_pool_size</span> <span class="o">=</span> <span class="s">268435456</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then run the query again?</p>

<figure class='code'><figcaption><span>vmstat</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu----
</span><span class='line'> r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa
</span><span class='line'> 0  0  27320  48716  75292 222112    0    0     0     0   11   16  0  0 100  0
</span><span class='line'> 1  0  27320  27512  75292 222192    0    0 17172     0  285  479 19  2 76  2
</span><span class='line'> 1  0  27320   6260  74568 172164    0    0 63440     4  542 1253 68 22  0  5
</span><span class='line'> 1  0  27320  76576  74516  46228    0    0 50144     0  380  599 78 14  0  3
</span><span class='line'> 2  0  27320  36544  74516  46240    0    0 33744     0  341  847 78 14  0  5
</span><span class='line'> 1  0  27320   6324  63108  44128    0    0 37904     0  362  506 79 14  0  3
</span><span class='line'> 1  0  27320   6868  55400  43228    0    0 34784     0  330  299 91  4  0  0
</span><span class='line'> 1  0  27320   6868  55408  43220    0    0 30720    44  335  232 93  1  0  3
</span><span class='line'> 1  0  27320   6868  55408  43228    0    0 31760     0  330  235 95  2  0  1
</span><span class='line'> 1  0  27320   6868  55408  43228    0    0 35856     0  348  261 89  4  0  3
</span><span class='line'> 1  0  27320   6868  55408  43228    0    0 29712     0  330  242 92  1  0  3
</span><span class='line'> 1  0  27320   6868  55408  43228    0    0 30688     0  335  222 89  5  0  3
</span><span class='line'> 1  0  27320   6868  55408  43228    0    0 28704     0  330  265 91  1  0  4
</span><span class='line'> 2  0  27320   6868  55408  43228    0    0 26640     0  329  208 88  6  0  2
</span><span class='line'> 1  0  27320   6868  55408  43228    0    0 32800     0  341  245 92  2  0  2
</span><span class='line'> 2  0  27320   6880  55408  43228    0    0 35888     0  353  269 90  3  0  4
</span><span class='line'> 2  0  27320   6868  55408  43228    0    0 32784     0  340  298 88  4  0  4
</span><span class='line'> 1  0  27320   6868  55416  43228    0    0 28696    52  349  223 90  3  0  3
</span><span class='line'> 1  0  27320   6868  55416  43228    0    0 25648     0  334  201 90  3  0  5
</span><span class='line'> 1  0  27320   6868  55416  43228    0    0 26640     0  325  199 93  2  0  1
</span><span class='line'> 0  0  27320   6892  55416  43228    0    0  5120     0   62   69 13  0 86  1
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='mysql'><span class='line'><span class="mi">4</span> <span class="n">rows</span> <span class="k">in</span> <span class="kt">set</span> <span class="p">(</span><span class="mi">18</span><span class="p">.</span><span class="mi">39</span> <span class="n">sec</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Heavy usage of IO, but the query survives, and the server keeps running.</p>

<h2>Conclusions</h2>

<p>Both systems are acting like the kind of beasts they are, we only need to
understand the nature of each to know what to expect.</p>

<p>MySQL is expanding beyond the buffer pool, it is a program like any other
and will use memory when it is needed, its configurations are to setup the
maximum set of resources that will be assigned to it in exclusivity, but it
 does not mean that it will not require some more on certain occasions.</p>

<p>The OS will act in self defence, no questions asked, so watch out for that,
and check your syslog when things get weird.</p>

<h2>A final note</h2>

<p>The os where this query is running with a <code>swappiness</code> of 0, with a higher value
the database heap would have been swapped out, but you don&rsquo;t want your database
memory being managed by the OS, trust me on this one.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[108 Chars Have to Be Enough for Everybody]]></title>
    <link href="http://pcarranza.github.io/blog/2014/10/18/108-chars-have-to-be-enough-for-everybody/"/>
    <updated>2014-10-18T15:10:34-04:00</updated>
    <id>http://pcarranza.github.io/blog/2014/10/18/108-chars-have-to-be-enough-for-everybody</id>
    <content type="html"><![CDATA[<p>Look at this code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;</span> <span class="nb">require</span> <span class="s2">&quot;socket&quot;</span>
</span><span class='line'>  <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">socket_file</span> <span class="o">=</span> <span class="s2">&quot;/tmp/1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123&quot;</span>
</span><span class='line'>  <span class="o">=&gt;</span> <span class="s2">&quot;/tmp/1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">socket_file</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>  <span class="o">=&gt;</span> <span class="mi">108</span>
</span><span class='line'><span class="no">Socket</span><span class="o">.</span><span class="n">unix_server_socket</span><span class="p">(</span><span class="n">socket_file</span><span class="p">)</span>
</span><span class='line'>  <span class="o">=&gt;</span> <span class="c1">#&lt;Socket:fd 1&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>Now lets add one more char:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;</span> <span class="n">socket_file</span> <span class="o">=</span> <span class="s2">&quot;/tmp/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234&quot;</span>
</span><span class='line'>  <span class="o">=&gt;</span> <span class="s2">&quot;/tmp/12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234&quot;</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">socket_file</span><span class="o">.</span><span class="n">length</span>
</span><span class='line'>  <span class="o">=&gt;</span> <span class="mi">109</span>
</span><span class='line'><span class="o">&gt;</span> <span class="n">sock</span> <span class="o">=</span> <span class="no">Socket</span><span class="o">.</span><span class="n">unix_server_socket</span><span class="p">(</span><span class="n">socket_file</span><span class="p">)</span>
</span><span class='line'>  <span class="ss">ArgumentError</span><span class="p">:</span> <span class="n">too</span> <span class="n">long</span> <span class="n">unix</span> <span class="n">socket</span> <span class="n">path</span> <span class="p">(</span><span class="mi">109</span> <span class="n">bytes</span> <span class="n">given</span> <span class="n">but</span> <span class="mi">108</span> <span class="n">bytes</span> <span class="n">max</span><span class="p">)</span>
</span><span class='line'>    <span class="n">from</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">rvm</span><span class="o">/</span><span class="n">rubies</span><span class="o">/</span><span class="n">ruby</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">socket</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">817</span><span class="ss">:in</span> <span class="sb">`unix&#39;</span>
</span><span class='line'><span class="sb">    from /usr/local/rvm/rubies/ruby-2.1.2/lib/ruby/2.1.0/socket.rb:817:in `</span><span class="n">unix_server_socket</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    from (irb):13</span>
</span><span class='line'><span class="s1">    from /usr/local/rvm/rubies/ruby-2.1.2/bin/irb:11:in `&lt;main&gt;&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now that is an interesting error, but where does this come from?</p>

<figure class='code'><figcaption><span>http://man7.org/linux/man-pages/man7/unix.7.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#define UNIX_PATH_MAX    108</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">sockaddr_un</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">sa_family_t</span> <span class="n">sun_family</span><span class="p">;</span>               <span class="cm">/* AF_UNIX */</span>
</span><span class='line'>    <span class="kt">char</span>        <span class="n">sun_path</span><span class="p">[</span><span class="n">UNIX_PATH_MAX</span><span class="p">];</span>  <span class="cm">/* pathname */</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>So it is an unix <em>feature</em>.</p>

<p>And what about pure unix? Let&rsquo;s check what happens on OSX</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&gt;&gt;</span> <span class="no">Socket</span><span class="o">.</span><span class="n">unix_server_socket</span><span class="p">(</span><span class="n">socket_file</span><span class="p">)</span>
</span><span class='line'>  <span class="ss">ArgumentError</span><span class="p">:</span> <span class="n">too</span> <span class="n">long</span> <span class="n">unix</span> <span class="n">socket</span> <span class="n">path</span> <span class="p">(</span><span class="mi">109</span> <span class="n">bytes</span> <span class="n">given</span> <span class="n">but</span> <span class="mi">104</span> <span class="n">bytes</span> <span class="n">max</span><span class="p">)</span>
</span><span class='line'>    <span class="n">from</span> <span class="sr">/Users/me</span><span class="o">/.</span><span class="n">rvm</span><span class="o">/</span><span class="n">rubies</span><span class="o">/</span><span class="n">ruby</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">ruby</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">socket</span><span class="o">.</span><span class="n">rb</span><span class="p">:</span><span class="mi">817</span><span class="ss">:in</span> <span class="sb">`unix&#39;</span>
</span><span class='line'><span class="sb">    from /Users/me/.rvm/rubies/ruby-2.1.1/lib/ruby/2.1.0/socket.rb:817:in `</span><span class="n">unix_server_socket</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">    from (irb):6</span>
</span><span class='line'><span class="s1">    from /Users/me/.rvm/rubies/ruby-2.1.1/bin/irb:11:in `&lt;main&gt;&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>It is even shorter. No joy on the pure unix world.</p>

<h2>You may be wondering</h2>

<p>What&rsquo;s the fun in all this? Check this out:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ SSH_SOCKET</span><span class="o">=</span>/tmp/01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123
</span><span class='line'>~<span class="nv">$ </span><span class="nb">echo</span> <span class="nv">$SSH_SOCKET</span> <span class="p">|</span> awk <span class="s1">&#39;{print length($0)}&#39;</span>
</span><span class='line'>109
</span><span class='line'>~<span class="nv">$ </span>ssh -o <span class="nv">ControlMaster</span><span class="o">=</span>yes -o <span class="nv">ControlPath</span><span class="o">=</span><span class="nv">$SSH_SOCKET</span> myremotehost 2&gt; ssh_stderr
</span><span class='line'>Welcome to MyRemoteBox
</span><span class='line'>
</span><span class='line'>  System information as of Fri Oct 17 18:29:43 EDT 2014
</span><span class='line'>
</span><span class='line'>  System load:  0.0                Processes:           a_lot
</span><span class='line'>  Memory usage: relaxed
</span><span class='line'>
</span><span class='line'>Last login: some <span class="nb">time </span>not too long ago from my.home.host.ip
</span><span class='line'><span class="o">[</span>MyRemoteBox<span class="o">]</span>~<span class="nv">$ </span>^D
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>cat ssh_stderr
</span><span class='line'>ControlPath <span class="s2">&quot;/tmp/01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123.bDqhMCS6EbmdeDeN&quot;</span> too long <span class="k">for </span>Unix domain socket
</span><span class='line'>Connection to my.remote.box.ip closed.
</span></code></pre></td></tr></table></div></figure>


<p><code>ssh</code> will <em>just work</em>, and you will get a connection: your master ssh connection
will reach the other end. But the socket will not be open, because <strong>the path is too long</strong>.</p>

<p>The worst part is that this failure will just log a message in stderr; that&rsquo;s it, good luck
to you if you are multiplexing ssh connections through a control path in any automation.
The main ssh connection will work but the rest will fail with weird messages like
&ldquo;hostname X not resolved&rdquo; because, in fact, the hostname cannot be resolved since
your client is not piped into the right network.</p>

<p>And this goes beyond, neither <a href="http://unixhelp.ed.ac.uk/CGI/man-cgi?ssh+1">ssh</a>
nor <a href="http://unixhelp.ed.ac.uk/CGI/man-cgi?ssh_config+5">ssh_config</a> man pages
say anything about this limitation.</p>

<p>Even checking filesystems limits: there are <a href="http://en.wikipedia.org/wiki/Comparison_of_file_systems#Limits">limits for file names</a>
(normally 255 bytes); but at least in any modern ext4 of hfs+, which should be quite
standard now, there is no specific limitation for the path size.</p>

<p>But yeah, a socket file looks like a file, but it is not a file, so general filesystem
limitations in which the socket file exists do not apply to them. They have their own.</p>

<p>Mind the gap.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Confident and Readable Code]]></title>
    <link href="http://pcarranza.github.io/blog/2014/10/12/confident-and-readable-code/"/>
    <updated>2014-10-12T14:27:15-04:00</updated>
    <id>http://pcarranza.github.io/blog/2014/10/12/confident-and-readable-code</id>
    <content type="html"><![CDATA[<p>The interesting thing about learning a new language is not learning the syntax but
stretching the mind into a new way of thinking. A new point of view which in the long run
will provide a much wider view and probably a new tool set which can then be ported back
into whatever you are doing right now.</p>

<!--more-->


<p>While learning ruby, I ended up reading <a href="http://confidentruby.com">Confident Ruby</a> by
<a href="http://avdi.org">Avdi Grimm</a></p>

<p>This book introduces the concept of timid code in which <em>&ldquo;the different parts of the method are
mixed up. Some input is collected, then some error handling, then some more input
collection, then work is done, and so on.&rdquo;</em></p>

<p>It also explains really well the idea of duck typing and object orientation in general,
that is, forget about asking for the type of an object (endless visitor patterns, or
worse: instance of) <strong>are you a duck?</strong>, but rather ask what the object can do: <strong>can you quack?</strong></p>

<p>Awesome, go get it, I learned a lot.</p>

<p>This book is a great follow up for <a href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship">clean code</a>
which is very Java-ish, and does not port so well to dynamic languages like ruby or python.</p>

<p>In Confident Ruby Avdi explains a lot of different patters that can be used to improve the
code focusing on the story: a method has to tell a story, and as such, it has to have 4
main blocks:</p>

<ul>
<li>collect input</li>
<li>Â perform work</li>
<li>deliver result</li>
<li>handle failures</li>
</ul>


<p>This is a really interesting structure to keep in mind, how messy is my code and how much
can I gain from writing my code in such way?</p>

<h2>A bit of self-criticism</h2>

<p>Check this gist:</p>

<figure class='code'><figcaption><span>load_id_rsa.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">load_rsa_key</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">key</span>
</span><span class='line'>    <span class="k">when</span> <span class="kp">nil</span>
</span><span class='line'>      <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;Key cannot be nil&quot;</span>
</span><span class='line'>    <span class="k">when</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">PKey</span><span class="o">::</span><span class="no">PKey</span>
</span><span class='line'>      <span class="n">key</span>
</span><span class='line'>    <span class="k">when</span> <span class="nb">String</span><span class="p">,</span> <span class="no">File</span><span class="p">,</span> <span class="no">IO</span>
</span><span class='line'>      <span class="n">text</span> <span class="o">=</span> <span class="n">read_file</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">text</span> <span class="o">=~</span> <span class="sr">/^ssh-rsa/</span>
</span><span class='line'>        <span class="n">load_ssh_pubkey</span> <span class="n">text</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="no">OpenSSL</span><span class="o">::</span><span class="no">PKey</span><span class="o">.</span><span class="n">read</span> <span class="n">text</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="kp">private</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">load_ssh_pubkey</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rsakey</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">PKey</span><span class="o">::</span><span class="no">RSA</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">text</span><span class="o">.</span><span class="n">lines</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">line</span><span class="o">|</span>
</span><span class='line'>    <span class="n">base64</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">split</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="n">keydata</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s2">&quot;m&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>    <span class="n">parts</span> <span class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="k">while</span> <span class="p">(</span><span class="n">keydata</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">dlen</span> <span class="o">=</span> <span class="n">keydata</span><span class="o">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="o">].</span><span class="n">bytes</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span>
</span><span class='line'>        <span class="p">(</span><span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">data</span> <span class="o">=</span> <span class="n">keydata</span><span class="o">[</span><span class="mi">4</span><span class="p">,</span> <span class="n">dlen</span><span class="o">]</span>
</span><span class='line'>      <span class="n">keydata</span> <span class="o">=</span> <span class="n">keydata</span><span class="o">[</span><span class="p">(</span><span class="n">dlen</span> <span class="o">+</span> <span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>      <span class="n">parts</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">type</span> <span class="o">=</span> <span class="n">parts</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;Unsupported key type </span><span class="si">#{</span><span class="n">type</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">unless</span> <span class="n">type</span> <span class="o">==</span> <span class="s2">&quot;ssh-rsa&quot;</span>
</span><span class='line'>    <span class="n">e</span> <span class="o">=</span> <span class="n">parts</span><span class="o">[</span><span class="mi">1</span><span class="o">].</span><span class="n">bytes</span><span class="o">.</span><span class="n">inject</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span>
</span><span class='line'>      <span class="p">(</span><span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">n</span> <span class="o">=</span> <span class="n">parts</span><span class="o">[</span><span class="mi">2</span><span class="o">].</span><span class="n">bytes</span><span class="o">.</span><span class="n">inject</span> <span class="k">do</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span>
</span><span class='line'>      <span class="p">(</span><span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="n">b</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">rsakey</span><span class="o">.</span><span class="n">n</span> <span class="o">=</span> <span class="n">n</span>
</span><span class='line'>    <span class="n">rsakey</span><span class="o">.</span><span class="n">e</span> <span class="o">=</span> <span class="n">e</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">rsakey</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">read_file</span> <span class="n">file</span>
</span><span class='line'>  <span class="n">f</span> <span class="o">=</span> <span class="n">open_file</span> <span class="n">file</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span>
</span><span class='line'>  <span class="n">f</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">open_file</span> <span class="n">file</span><span class="p">,</span> <span class="n">mode</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">file</span>
</span><span class='line'>  <span class="k">when</span> <span class="nb">String</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">open</span> <span class="n">file</span><span class="p">,</span> <span class="n">mode</span>
</span><span class='line'>  <span class="k">when</span> <span class="no">File</span><span class="p">,</span> <span class="no">IO</span>
</span><span class='line'>    <span class="n">file</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="k">raise</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;Invalid file </span><span class="si">#{</span><span class="n">file</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Focus on one function <code>load_ssh_pubkey</code>. It does a non trivial thing
(at least not for me) which is parsing and building a
RSA public key from an ssh key.</p>

<p>It works. But the problem here is that it is really hard to follow, the fact that the key
loading part is using a <em>while there is data to be read</em> does not state with clarity how long
the reading is going to happen.</p>

<p>There are many <em>byte.injects</em>, one that starts explicitly in 0, the others don&rsquo;t, but why?.
It is also assuming that more than one line is going to be read from the file/text, but the
function will return only the last one, which is not clearly stated.</p>

<p>It also checks if the key type is ssh-rsa, which is also checked in the caller
method, right in the middle of the parsing part, where work is being performed.</p>

<p>And then finally it builds the key to deliver it back.</p>

<p>It is really hard to follow. This code is not telling a story, it is surviving the input
data, delivering a key as a side effect if it is not killed in the way.</p>

<p>It is not clean code at all.</p>

<h2>Â Let&rsquo;s try again</h2>

<p>Extracted from the <em>rebuild</em> branch:</p>

<figure class='code'><figcaption><span>ssh_key.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SSHKey</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:rsa</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">args</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>    <span class="n">source_file</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">fetch</span><span class="p">(</span><span class="ss">:file</span><span class="p">)</span> <span class="p">{</span> <span class="nb">fail</span> <span class="no">ArgumentError</span><span class="p">,</span> <span class="s2">&quot;Filename is required&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">source</span> <span class="o">=</span> <span class="k">if</span> <span class="n">source_file</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:read</span><span class="p">)</span>
</span><span class='line'>               <span class="n">source_file</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>             <span class="k">else</span>
</span><span class='line'>               <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">source_file</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>                 <span class="n">file</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'>               <span class="k">end</span>
</span><span class='line'>             <span class="k">end</span>
</span><span class='line'>    <span class="vi">@rsa</span> <span class="o">=</span> <span class="n">load_ssh_rsa_key</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@rsa</span> <span class="o">||=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">PKey</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">load_ssh_rsa_key</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">fail</span> <span class="s2">&quot;DSA is not supported&quot;</span> <span class="k">if</span> <span class="n">source</span> <span class="o">=~</span> <span class="sr">/^ssh-dsa/</span>
</span><span class='line'>    <span class="k">return</span> <span class="kp">nil</span> <span class="k">unless</span> <span class="n">source</span> <span class="o">=~</span> <span class="sr">/^ssh-rsa/</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">keydata</span> <span class="o">=</span> <span class="n">decode_key</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">rsakey</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">PKey</span><span class="o">::</span><span class="no">RSA</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">skip_key_type_length</span> <span class="o">=</span> <span class="n">bytes_to_number</span><span class="p">(</span><span class="n">keydata</span><span class="o">.</span><span class="n">slice!</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>    <span class="n">keydata</span><span class="o">.</span><span class="n">slice!</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">skip_key_type_length</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">exponent_length</span> <span class="o">=</span> <span class="n">bytes_to_number</span><span class="p">(</span><span class="n">keydata</span><span class="o">.</span><span class="n">slice!</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>    <span class="n">rsakey</span><span class="o">.</span><span class="n">e</span> <span class="o">=</span> <span class="n">bytes_to_number</span><span class="p">(</span><span class="n">keydata</span><span class="o">.</span><span class="n">slice!</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">exponent_length</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">modulus_length</span> <span class="o">=</span> <span class="n">bytes_to_number</span><span class="p">(</span><span class="n">keydata</span><span class="o">.</span><span class="n">slice!</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>    <span class="n">rsakey</span><span class="o">.</span><span class="n">n</span> <span class="o">=</span> <span class="n">bytes_to_number</span><span class="p">(</span><span class="n">keydata</span><span class="o">.</span><span class="n">slice!</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">modulus_length</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@rsa</span> <span class="o">=</span> <span class="n">rsakey</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">decode_key</span><span class="p">(</span><span class="n">source</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base64</span> <span class="o">=</span> <span class="n">source</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">split</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>    <span class="n">keydata</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s2">&quot;m&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>    <span class="n">keydata</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">bytes_to_number</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="n">data</span><span class="o">.</span><span class="n">bytes</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">sum</span><span class="p">,</span> <span class="n">byte</span><span class="o">|</span>
</span><span class='line'>      <span class="p">(</span><span class="n">sum</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="n">byte</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>In this case I&rsquo;m trying to follow Avdi&rsquo;s ideas: readability and telling a story matters.
Given that I&rsquo;m in the process of turning this <a href="https://github.com/pcarranza/zssl">console tool</a>
into a gem that I can actually export I prefer creating an object that will know how to
handle this ssh key loading instead of a function in a module.</p>

<p>Let&rsquo;s check what goes on in the <code>load_ssh_rsa_key</code> method:</p>

<ul>
<li>It fails if it gets an DSA key because it is not supported.</li>
<li>The key is decoded in another method.</li>
<li>There are 3 chunks of data: key type, exponent and modulus.</li>
<li>The first 4 bytes are the size of the chunk data.</li>
<li>With that we can build an RSA key, and that is how it is stored in the ssh key file.</li>
</ul>


<p>Much, much better, I can understand what it does in one read, there are no surprises in that code.</p>

<p>Thanks Avdi.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Glue Overhead and Real Processing]]></title>
    <link href="http://pcarranza.github.io/blog/2014/08/14/glue-overhead-and-real-processing/"/>
    <updated>2014-08-14T14:38:39-04:00</updated>
    <id>http://pcarranza.github.io/blog/2014/08/14/glue-overhead-and-real-processing</id>
    <content type="html"><![CDATA[<p>I was on vacation, little to no connectivity, I just needed to learn something new: I needed to code something.</p>

<p>Using my phone I downloaded the source code from <a href="https://github.com/sjl/learnvimscriptthehardway/">learn VimScript the hard way</a>.</p>

<p>It was the book in markdown, but I did not wanted to read markdown, so I hacked a very simple
<a href="https://gist.github.com/pcarranza/da11a10e03c3ba1641ad#file-convert-sh">bash script</a>
to convert this markdown into html using <a href="https://github.com/davidfstr/rdiscount">rdiscount</a>
which happened to be installed in my laptop.</p>

<p>Executing this script in my laptop took something like 11 seconds&hellip; that is a lot for a 57 files markdown-to-html
convertion.
It is way too much. I wrote the same thing <a href="https://gist.github.com/pcarranza/da11a10e03c3ba1641ad#file-convert-rb">using ruby all along</a>.
This second implementation took less than a second in execution time.</p>

<p>That&rsquo;s it, I got distracted.</p>

<!--more-->


<h2>Lets get some data</h2>

<p>First lets use /usr/bin/time to try to understand at a 10km height view what is going on:</p>

<p><code>/usr/bin/time --verbose ../../bash_convert.sh</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>User time (seconds): 4.88
</span><span class='line'>System time (seconds): 0.56
</span><span class='line'>Percent of CPU this job got: 97%
</span><span class='line'>Elapsed (wall clock) time (h:mm:ss or m:ss): 0:05.60
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p><code>/usr/bin/time --verbose ruby1.9.3 ../../convert.rb</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>User time (seconds): 0.09
</span><span class='line'>System time (seconds): 0.02
</span><span class='line'>Percent of CPU this job got: 94%
</span><span class='line'>Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.12
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>The time difference is tremendous, lets dive a bit to figure out what is actually going on.</p>

<h2>Profiling with strace</h2>

<p>Strace itself will add a bit of overhead, lets begin running the command with a <code>time</code> up front
to capture all the input in one file, including the strace overhead.</p>

<p><code>/usr/bin/time --verbose strace -r -f executable 2&gt; bc.strace.out</code>
will record time while running strace with relative timestamps,
also recording subprocesses system calls, then write all the
output in the file bc.strace.out</p>

<p>At the bottom of the output we will find the total time output section:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Command being timed: "strace -r -f ../../bash_convert.sh"
</span><span class='line'>User time (seconds): 5.97
</span><span class='line'>System time (seconds): 3.53
</span><span class='line'>Percent of CPU this job got: 98%
</span><span class='line'>Elapsed (wall clock) time (h:mm:ss or m:ss): 0:09.69</span></code></pre></td></tr></table></div></figure>


<p>It looks like the overhead of catching all the systems calls with strace is
around 2 more seconds.</p>

<p>Strace output looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> 0.000000 open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'> 0.000147 open("/lib/x86_64-linux-gnu/libtinfo.so.5", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'> 0.000175 open("/lib/x86_64-linux-gnu/libdl.so.2", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'> 0.000171 open("/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'> 0.000565 open("/dev/tty", O_RDWR|O_NONBLOCK) = 3
</span><span class='line'> 0.000147 open("/usr/lib/locale/locale-archive", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'> 0.000299 open("/proc/meminfo", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'> 0.000485 open("/usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache", O_RDONLY) = 3
</span><span class='line'> 0.000653 open("../../bc.sh", O_RDONLY) = 3
</span><span class='line'>Process 16661 attached
</span><span class='line'>[pid 16661]      0.002270 open("/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16661]      0.000105 open("/lib/x86_64-linux-gnu/libselinux.so.1", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16661]      0.000233 open("/lib/x86_64-linux-gnu/librt.so.1", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16661]      0.000175 open("/lib/x86_64-linux-gnu/libacl.so.1", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16661]      0.000183 open("/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16661]      0.000176 open("/lib/x86_64-linux-gnu/libdl.so.2", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16661]      0.000159 open("/lib/x86_64-linux-gnu/libpthread.so.0", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16661]      0.000200 open("/lib/x86_64-linux-gnu/libattr.so.1", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16661]      0.000762 open("/proc/filesystems", O_RDONLY) = 3
</span><span class='line'>[pid 16661]      0.000219 open("/usr/lib/locale/locale-archive", O_RDONLY|O_CLOEXEC) = 3
</span><span class='line'>[pid 16660]      0.002030 wait4(-1, Process 16660 suspended
</span><span class='line'>Process 16660 resumed
</span><span class='line'>Process 16661 detached
</span><span class='line'>[{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 16661
</span><span class='line'> 0.000224 --- SIGCHLD (Child exited) @ 0 (0) ---
</span><span class='line'> 0.000036 wait4(-1, 0x7fffc1760f18, WNOHANG, NULL) = -1 ECHILD (No child processes)</span></code></pre></td></tr></table></div></figure>


<p>And it goes on and on and on.</p>

<h2>Pre-processing strace output</h2>

<p>Looking at the trace file we will need to do some processing to split the main process
from the subprocesses data, as the main process is the bash script execution and the
subprocesses are ruby interpreter executions.</p>

<p>This is what I did to split those two data sets:</p>

<p>All that starts with spaces and then a time measurement belongs to the main process.
But all that starts with <code>[pid xxxx]</code> belongs to a subprocess.</p>

<p>So, lets split output into main-process and sub-processes:</p>

<p><code>grep -e '^ \+[0-9\.]\+ ' bc.strace.out | sed -e 's/^ *//g' &gt; bc.st.mp.out</code></p>

<p><code>grep -e '^\[pid [0-9]\+\]' bc.strace.out | sed -e 's/^\[pid [0-9]\+\] *//g' &gt; bc.st.sp.out</code></p>

<h3>And now some questions with the data</h3>

<p>First, we will need some regex processing, so define this function to make your life easier:</p>

<p><code>function regex { gawk 'match($0,/'$1'/, ary) {print ary['${2:-'0'}']}'; }</code></p>

<p>And then:</p>

<ul>
<li>How much time do the main process takes to execute?</li>
</ul>


<p><code>cat bc.st.mp.out | gawk '{ sum += $1 } END { print sum }'</code>: 0.116901 seconds</p>

<ul>
<li>How much time do all the subprocesses take to execute?</li>
</ul>


<p><code>cat bc.st.sp.out | gawk '{ sum += $1 } END { print sum }'</code>: 9.57473 seconds</p>

<ul>
<li>In the main process, how much time do each system call take?</li>
</ul>


<p><code>for syscall in $(cat bc.st.mp.out | regex ' ([a-z0-9_]*)' 1 | sort | uniq); do t=$(grep -e "$syscall" bc.st.mp.out | awk '{ sum += $1 } END { printf("%.6f", sum) }') ; echo $t $syscall; done | sort -gr</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0.052399 wait4
</span><span class='line'>0.028265 rt_sigprocmask
</span><span class='line'>0.009249 write
</span><span class='line'>0.007297 brk
</span><span class='line'>0.002603 rt_sigaction
</span><span class='line'>0.002481 stat
</span><span class='line'>0.002456 clone
</span><span class='line'>0.001792 rt_sigreturn
</span><span class='line'>0.001109 mmap
</span><span class='line'>0.000966 read
</span><span class='line'>0.000877 open
</span><span class='line'>0.000798 mprotect
</span><span class='line'>0.000737 close
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<ul>
<li>But how many times each of these system calls are being called on the main process?</li>
</ul>


<p><code>cat bc.st.mp.out | regex ' ([a-z0-9_]*)' 1 | sort | uniq -c | sort -gr</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>244 rt_sigprocmask
</span><span class='line'>114 write
</span><span class='line'>67 rt_sigaction
</span><span class='line'>59 wait4
</span><span class='line'>58 rt_sigreturn
</span><span class='line'>58 clone
</span><span class='line'>16 brk
</span><span class='line'>15 mmap
</span><span class='line'>13 read
</span><span class='line'>10 stat
</span><span class='line'>10 close
</span><span class='line'>9 open
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<ul>
<li>How much time does each system call takes in the subprocesses?</li>
</ul>


<p><code>for syscall in $(cat bc.st.sp.out | regex ' ([a-z0-9_]*)' 1 | sort | uniq); do t=$(grep -e "$syscall" bc.st.sp.out | awk '{ sum += $1 } END { printf("%.6f", sum) }') ; echo $t $syscall; done | sort -gr</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>5.164169 stat
</span><span class='line'>1.204976 open
</span><span class='line'>1.160715 read
</span><span class='line'>0.798758 fstat
</span><span class='line'>0.489750 brk
</span><span class='line'>0.295447 close
</span><span class='line'>0.256523 ioctl
</span><span class='line'>0.251957 lstat
</span><span class='line'>0.187970 lseek
</span><span class='line'>0.108561 exit_group
</span><span class='line'>0.102944 mmap
</span><span class='line'>0.085621 mprotect
</span><span class='line'>0.071114 rt_sigaction
</span><span class='line'>0.061000 getrlimit
</span><span class='line'>0.060410 rt_sigprocmask
</span><span class='line'>0.046956 write</span></code></pre></td></tr></table></div></figure>


<ul>
<li>And how many times is each one called?</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>19790 fstat
</span><span class='line'>15174 stat
</span><span class='line'>14602 open
</span><span class='line'>13177 read
</span><span class='line'>7940 close
</span><span class='line'>5930 ioctl
</span><span class='line'>5244 lstat
</span><span class='line'>5016 lseek
</span><span class='line'>2534 mmap
</span><span class='line'>2149 brk
</span><span class='line'>1555 mprotect
</span><span class='line'>1325 rt_sigaction
</span><span class='line'>...
</span><span class='line'>115 write
</span><span class='line'>...
</span><span class='line'>57 wait4</span></code></pre></td></tr></table></div></figure>


<h3>Conclusions</h3>

<h2>The main process waits, subprocesses open and read files</h2>

<p>This is what strace shows, the main process spends about half of its execution time waiting on subprocesses.</p>

<p>The subprocesses spend most of the time checking for file status (stat and fstat, which are being
accounted as user time) and then opening and reading files. Which basically is waiting too.</p>

<p>Taking a look at what files are being open by the subprocesses</p>

<p><code>grep open bc.st.sp.out | sed -e 's/^[0-9\.]\+ //' | sort | uniq -c | sort -gr</code></p>

<p>We find that the ruby environment (about 140 files in this particular case), is being loaded at least 57 times,
one time per file to convert. This loading is roughly 0.1461 seconds per environment the main process needs to load.
And a simple multiplication (0.1461 * 57 = 8.3277) explains where the time actually goes: in the glue, loading
one full environment for each file to convert.</p>

<p>For me, this answers one of those questions that is always bouncing in my head: how heavy is heavy when we
talk about interpreted languages like ruby or python.</p>

<p>Loading a full ruby environment is something really heavy and should be taken into consideration if we ever need
to do a repetitive task. Going back to the beginning processing all the files in one only environment takes less
than the average time it is needed to load it 57 times.</p>

<p>This said, I will keep using bash for quick dirty hacks or stream processing like I&rsquo;ve done in this very post,
glueing cat, grep, sed and awk to parse the data. But if I ever need to automate a task that will be executed
many times a day this glue overhead may be too much.</p>

<p><code>strace</code> <strong>rocks</strong> big time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rhythmweb, the Setup]]></title>
    <link href="http://pcarranza.github.io/blog/2014/07/27/rhythmweb-the-setup/"/>
    <updated>2014-07-27T12:57:19-04:00</updated>
    <id>http://pcarranza.github.io/blog/2014/07/27/rhythmweb-the-setup</id>
    <content type="html"><![CDATA[<!--more-->


<ul>
<li>An <a href="http://blog.codinghorror.com/revisiting-the-home-theater-pc/">HTPC</a> with <a href="https://wiki.gnome.org/Apps/Rhythmbox">RhythmBox</a> installed in it</li>
<li>An <a href="http://www.whathifi.com/yamaha/s500/review">AMP</a> with a pair of <a href="http://www.whathifi.com/monitor-audio/bronze-bx2/review">speakers</a>,</li>
<li>A <a href="http://hifimediy.com/index.php?route=product/product&amp;product_id=83">DAC</a></li>
<li>A mobile phone with a browser.</li>
<li>A pulse audio specific configuration to duplicate the output, analog and DAC (adding HDMI is a small tweak):</li>
</ul>


<figure class='code'><figcaption><span>/etc/pulse/default.pa</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="na">load-module module-combine-sink sink_name</span><span class="o">=</span><span class="s">combined slaves=alsa_output.pci-0000_00_1b.0.analog-stereo,alsa_output.usb-HiFimeDIY_Audio_SA9023_USB_Audio-01-Audio.analog-stereo</span>
</span><span class='line'><span class="err">set-default-sink</span> <span class="err">combined</span>
</span></code></pre></td></tr></table></div></figure>


<p>Total spent budget, assuming you already have the HTPC and the mobile phone: 756â¬</p>

<p>Then you can pick what your player is going to play using your mobile phone, without reaching a keyboard, a mouse or a screen.</p>

<p>You can skip the DAC if you don&rsquo;t care that much about sound, but if don&rsquo;t care too much about sound, you can skip the whole project.</p>

<p>Originally this was built on top of a Mac Mini G4 without the DAC, but time passes and improvements arrive.</p>

<p>Enjoy</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Refactoring and Code Coverage]]></title>
    <link href="http://pcarranza.github.io/blog/2014/06/21/about-code-coverage/"/>
    <updated>2014-06-21T21:19:00-04:00</updated>
    <id>http://pcarranza.github.io/blog/2014/06/21/about-code-coverage</id>
    <content type="html"><![CDATA[<p>On the <a href="http://pcarranza.github.io/2014/05/resuscitating-rhythmweb.html">previous post</a> I was talking about <a href="https://github.com/pcarranza/rhythmweb">legacy code</a>, considering legacy code as any code that has no tests.</p>

<p>As an excercise I was going to recover this project first by adding some testing layer and then refactoring.</p>

<!--more-->


<p>In this process I really learned a lot, first about the mindset change that using a completely different language such as Java or Python is: one thing is to write some code in python with a Java style (as it was before) and another completely different thing is understanding how to code in a given language, the idiom, style and patterns that apply to one language does not necessary apply to other.</p>

<p>Second: my code sucks, really; reviewing your own code a few years later is a great humble process, this gives you a lot of perspective at how much you sucked then, and make you wonder how much you will suck now to your future self.</p>

<p>And third: it is really hard to measure quality in any objective and reliable way, some people will talk about code coverage as the ultimate quality index, well, it is not; yes it is useful, but you cannot rely on coverage as the only quality measure. More important than that is common sense and making the right design decisions.</p>

<h2>Â Testing, mocking and code coverage</h2>

<p>Mocking is actually lying, but in this particular case it is directly impossible to use the real objects that handle Rhythmbox because those are not accessible without a Rhythmbox instance; and it is not easy to automatically launch a Rhythmbox instance and then run tests from there; this can be considered as a project in itself. In fact that would be system testing, and in this case I&rsquo;m going as far as unit testing with some manual system testing using curl.</p>

<p>On the good part, code coverage will give you the visibility to understand what you are actually testing, and what is in a reliable enough status, and with that you can refactor code, removing code that is actually impossible to test applying late <a href="http://en.wikipedia.org/wiki/You_aren't_gonna_need_it">YAGNI</a> and cleaning up the code to make is subjectively better, which is the most I can expect.</p>

<p>The way I faced starting to cover the code was to create a conceptual business layer that did not existed in the code and then starting to cover only this layer while asserting that the mocks were called with the right arguments. I also used some stubs to avoid the &lsquo;mock reply to all&rsquo; pattern as it hides bugs that you will only find when running the code for real.</p>

<p>This alowed me to focus on that conceptual business logic layer and start pushing complexity up and down leaving only what I considered to be application business logic. After that responsibilities started to be more clear, and with this iterative process, pieces started to fall into it&rsquo;s natural place one by one.</p>

<h2>The refactoring log</h2>

<ul>
<li>With initial coverage, I refactored configuration and logging just for simplification, it helped later.</li>
<li>Some dead code was removed, including the <a href="https://github.com/pcarranza/rhythmweb/commit/8439ac0fb3b15b3810e9740697fdd959dd06afba">templating engine</a> that was actually not in use, but that was not visible due to excesive complexity. And I was honestly afraid of removing anything without proper testing.</li>
<li>When I reached <a href="https://coveralls.io/builds/801583">some good coverage</a> of the rest layer I replaced the <a href="https://github.com/pcarranza/rhythmweb/commit/9c0e2f2406476df5632bfecff4e1aae4e156a4af">json parsing and writing implementation</a> that was there from the G4 times with the current python json implementation, less is more.</li>
<li>Around this point I realized that it was quite easy to <a href="https://github.com/pcarranza/rhythmweb/commit/62c2e1d022e727f6e77b2578ce15e0868d93a16f">introduce bugs using mocks</a> so I added an <a href="https://github.com/pcarranza/rhythmweb/commit/2ab2e2bd19b840ae79149f9d35f18118ddb3bd13">acceptance test that I can run from a terminal</a>.</li>
<li>The I started pushing complexity out of the rest layer into a controller layer: <a href="https://github.com/pcarranza/rhythmweb/commit/c6b685b1c47a953a5d30d5d3f03ef317679e4f9e">song</a>, <a href="https://github.com/pcarranza/rhythmweb/commit/06361f9a1f96270d595a48550c0eafb64ebfff51">queue</a>, <a href="https://github.com/pcarranza/rhythmweb/commit/12858f5ce871e66c79bf628cc85e64880522276d">player</a> and finally <a href="https://github.com/pcarranza/rhythmweb/commit/ec80ccc5d07b29998f4913fe710559481e6558e7">query</a>.</li>
<li>With that covered, I <a href="https://github.com/pcarranza/rhythmweb/commit/6e06a554c620da357588788deb78dad7cfbf6788">removed the rhythmbox handler argument that was being passed around</a> and added that as a module value. I was growing on confidence, so I started to do major changes.</li>
<li>So I started to go down, and started to add coverage for the rhythmbox handler object, with the goal of <a href="https://github.com/pcarranza/rhythmweb/commit/1b442a578841edb6a7f6a5355d116fc4ab5d1dda">removing the multiple inheritance</a> and collapse all the code in one object so it can then be simplified and then splitted again.</li>
<li>Then refactored too fast without having proper coverage to finally discover a <a href="https://github.com/pcarranza/rhythmweb/commit/b8cfbcf5253ac5a8d18c179cd3ab6fa237aafe7c">bug that exploded in my face</a></li>
<li>Worked hard on getting real coverage on the rbhandler object, one responisiblity at a time, to finally get the query part refactored, and <a href="https://github.com/pcarranza/rhythmweb/commit/9fc1116209b129542387b177f048e7ef99e08551">looks way much better</a>.</li>
<li>Finally, just to make sure that things keep running I added some full stack integration testing, basically it launches the server with all the stack and <a href="https://github.com/pcarranza/rhythmweb/commit/7cdc9e60e63ec7ad5df982ed60f3dcf034b8f1c5">gets a page</a>, some <a href="https://github.com/pcarranza/rhythmweb/commit/2929512aee8c1d65d0103c7dc64756c821a04323">page not found error and 500 server error tests</a>, and then <a href="https://github.com/pcarranza/rhythmweb/commit/b34b09bf9bcefb82421940316a157e8c8fc9eeec">posting data test</a>.</li>
</ul>


<p>While doing this I changed some things on the server implementation (simplification) and I&rsquo;m in my way to change all the routing implementation, I can do it because I can test with a full stack integration test that it will keep working.</p>

<h2>The coverage percentage as quality measurement</h2>

<p>The funny thing I found out is that while refactoring I tend to write less code, if this code was covered I will actually reduce the covered absolute number of lines, and also the total number of lines will be reduced. But the funny thing is that in the coveralls metric my refactored code (with better style) as a lower punctuation.</p>

<p>The case of the <a href="https://coveralls.io/builds/870038">rhythmbox handler simplification lost 1.21% of code coverage</a>, and it was just better to have it all on plain sight than spread across multiple objects that where inherithed into the same. But the simple fact that some class definition code was not being imported anymore this hitted the code coverage, producing this &lsquo;bad result&rsquo; lowering the score.</p>

<p>And even worse, the <a href="https://coveralls.io/builds/884174">query refactoring</a> that produced a code that has way better style (<a href="http://en.wikipedia.org/wiki/SOLID_(object-oriented_design)">SOLID wise</a>) also suffered of a 0.1% coverage drop because it simply was less code.</p>

<h2>Final thoughts</h2>

<p>Is code coverage a bad thing? or unnecessary? not at all.</p>

<p>In this particular case, code coverage was a very usefull tool that allowed me to understand where to go next, starting with a thin layer of testing and then moving up and down from there, watching what was touched with each new test and refactoring these pieces of code to a better shape slowly.</p>

<p>In the land of the blind, the one-eye man is king; and code coverage is an eye into your code.</p>

<p>But don&rsquo;t take the percentage of code covered as an indicator of quality, it is just an indicator of visibility.</p>

<p>A lot of the code that is still in the project sucks and must be refactored, I&rsquo;m still working on it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resuscitating Rhythmweb]]></title>
    <link href="http://pcarranza.github.io/blog/2014/05/23/resuscitating-rhythmweb/"/>
    <updated>2014-05-23T18:50:00-04:00</updated>
    <id>http://pcarranza.github.io/blog/2014/05/23/resuscitating-rhythmweb</id>
    <content type="html"><![CDATA[<p>There was an old project, it started based on an ancient ppc ubuntu that was running on top of a mac mini G4, built for python 2.4 in an environment that did not accepted installing any dependency.</p>

<p>Back in the day I did not knew what a unit test was, so I built it the old way: code a little, try it, code a little more, make it work again, etc, etc.
You can tell if you see the old code, it is full with logging messages to check if the execution reach a certain portion of the code, oh yeah, no debugging was possible.</p>

<p>In the middle of the road, rhythmbox evolved, with <a href="http://www.gnome.org/gnome-3/">gnome-shell</a> rhythmbox adapted to <a href="http://www.gtk.org/">GTK3</a>, breaking a lot of things.
And finally it also changed from python2 to python3, breaking the rest of things.</p>

<p>There is a lot of work to do to bring it back.</p>

<p>The way I use it is by turning my mobile phone into a remote control for my music player: <a href="https://wiki.gnome.org/Apps/Rhythmbox">rhythmbox</a>,
 that way I can select what I want to hear without turning on the screen on my HTPC or reaching a keyboard, both things I&rsquo;m not usually able to, and also I am lazy.</p>

<!--more-->


<h2>Â The initial project status</h2>

<p><a href="http://en.wikipedia.org/wiki/Abandonware">Abandonware</a> is probably the word that fits better.
Shame on me, as I ignored the project for a long time, mainly because I did not needed it.
But I do need it back, or maybe it is just that I have some time to dedicate to it, plus I feel embarrassed by that code:
never underestimate the power of public shame.</p>

<p>Lets face it, I did not wanted to change a thing, it was still kinda running on rhythmbox on gtk3, python2.7,
which was what I had in my old debian based rhythmbox on the TV box: I did not needed to code anything to use it&hellip;</p>

<h2>The public shame</h2>

<p>I missed it, and progress is progress, and also there is the shame. I needed to do something about it; so, I brought it into my
<a href="https://github.com/pcarranza/rhythmweb">github</a> account, setup the project on <a href="https://travis-ci.org/pcarranza/rhythmweb">travis-ci</a>
and the most important, add the <a href="https://coveralls.io/r/pcarranza/rhythmweb">badge with the coverage percentage</a>,
so the shame becomes public.
Then I added a roadmap to the readme, which in this case works as a wish list, all the things I want to happen to the project.</p>

<h2>How to work with legacy code?</h2>

<p><em>Legacy code</em> is any code that is in production, not covered by a test. With that definition, you can write legacy code right away, you only need to code,
and not code tests.</p>

<p>Initially this project had a coverage of a flawless <strong>0</strong>, so it was all legacy code.</p>

<p>There is a lot of refactor to do, but it is not possible to refactor without tests,
that is like skydiving with a backpack, any backpack, maybe you get lucky and it is a parachute, probably not.</p>

<p>This is where I am right now, writing tests.</p>

<p>This can be tricky, you can spend all your time chasing a 100% coverage number without adding any value to the code, I did that already and I know that nothing good comes out of it, so lets setup a ground rules:</p>

<ul>
<li>Coverage is a tool, not a goal: it&rsquo;s not about the 100% number, I have to agree with @dhh; coverage is not a magical metric that will make the code perfect, it is just a tool that will let you know what is being tested and what not, it&rsquo;s a matter of common sense to determine if it is good enough to stop or not.</li>
<li>No refactor until basic usage is covered: this is a basic, to avoid introducing new bugs on a code base that is bad enough already.</li>
<li>No mocking or patching beyond isolating rhythmbox logic or WSGI logic: again, heavy mocking or monkey patching would hide bugs inside the mocks, so lets try to use actual objects whenever possible and keep mocks under control.</li>
<li>All changes will be made while using the tool (eat your own dogfood)</li>
<li>Use travis and coveralls: for gamification</li>
<li>Declare what is the direction of the project up from in the roadmap to keep focus</li>
</ul>


<p>With all that, I&rsquo;ll resuscitate this project. Stay online for updates.</p>
]]></content>
  </entry>
  
</feed>
